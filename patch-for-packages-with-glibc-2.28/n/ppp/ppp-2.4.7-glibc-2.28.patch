diff -aurN ppp-2.4.7/pppd/chap_ms.c ppp-2.4.7-mod/pppd/chap_ms.c
--- ppp-2.4.7/pppd/chap_ms.c	2014-08-09 12:31:39.000000000 -0000
+++ ppp-2.4.7-mod/pppd/chap_ms.c	2018-08-08 13:53:50.425196565 -0000
@@ -518,12 +518,12 @@
 	   sizeof(ZPasswordHash), ZPasswordHash);
 #endif
 
-    (void) DesSetkey(ZPasswordHash + 0);
-    DesEncrypt(challenge, response + 0);
-    (void) DesSetkey(ZPasswordHash + 7);
-    DesEncrypt(challenge, response + 8);
-    (void) DesSetkey(ZPasswordHash + 14);
-    DesEncrypt(challenge, response + 16);
+    (void) setkey(ZPasswordHash + 0);
+    encrypt(challenge, response + 0);
+    (void) setkey(ZPasswordHash + 7);
+    encrypt(challenge, response + 8);
+    (void) setkey(ZPasswordHash + 14);
+    encrypt(challenge, response + 16);
 
 #if 0
     dbglog("ChallengeResponse - response %.24B", response);
@@ -640,10 +640,10 @@
     BZERO(UcasePassword, sizeof(UcasePassword));
     for (i = 0; i < secret_len; i++)
        UcasePassword[i] = (u_char)toupper(secret[i]);
-    (void) DesSetkey(UcasePassword + 0);
-    DesEncrypt( StdText, PasswordHash + 0 );
-    (void) DesSetkey(UcasePassword + 7);
-    DesEncrypt( StdText, PasswordHash + 8 );
+    (void) setkey(UcasePassword + 0);
+    encrypt( StdText, PasswordHash + 0 );
+    (void) setkey(UcasePassword + 7);
+    encrypt( StdText, PasswordHash + 8 );
     ChallengeResponse(rchallenge, PasswordHash, &response[MS_CHAP_LANMANRESP]);
 }
 #endif
diff -aurN ppp-2.4.7/pppd/pppcrypt.c ppp-2.4.7-mod/pppd/pppcrypt.c
--- ppp-2.4.7/pppd/pppcrypt.c	2014-08-09 12:31:39.000000000 -0000
+++ ppp-2.4.7-mod/pppd/pppcrypt.c	2018-08-08 13:50:16.396197382 -0000
@@ -110,7 +110,7 @@
 }
 
 bool
-DesSetkey(key)
+setkey(key)
 u_char *key;
 {
 	u_char des_key[8];
@@ -126,7 +126,7 @@
 }
 
 bool
-DesEncrypt(clear, cipher)
+encrypt(clear, cipher)
 u_char *clear;	/* IN  8 octets */
 u_char *cipher;	/* OUT 8 octets */
 {
@@ -161,7 +161,7 @@
 static des_key_schedule	key_schedule;
 
 bool
-DesSetkey(key)
+setkey(key)
 u_char *key;
 {
 	des_cblock des_key;
@@ -171,7 +171,7 @@
 }
 
 bool
-DesEncrypt(clear, key, cipher)
+encrypt(clear, key, cipher)
 u_char *clear;	/* IN  8 octets */
 u_char *cipher;	/* OUT 8 octets */
 {
