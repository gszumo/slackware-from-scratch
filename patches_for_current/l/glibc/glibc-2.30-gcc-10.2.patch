diff -aurN glibc-2.30/elf/dl-object.c glibc-2.30-build/elf/dl-object.c
--- glibc-2.30/elf/dl-object.c	2020-12-13 15:57:28.487474412 +0100
+++ glibc-2.30-build/elf/dl-object.c	2020-12-13 15:13:59.254438948 +0100
@@ -65,7 +65,7 @@
      auditing libraries and if yes, how many.  Assume the worst.  */
   unsigned int naudit = GLRO(dl_naudit) ?: ((mode & __RTLD_OPENEXEC)
 					    ? DL_NNS : 0);
-  size_t audit_space = naudit * sizeof (new->l_audit[0]);
+  size_t audit_space = naudit * sizeof (struct auditstate);
 #else
 # define audit_space 0
 #endif
diff -aurN glibc-2.30/elf/rtld.c glibc-2.30-build/elf/rtld.c
--- glibc-2.30/elf/rtld.c	2020-12-13 15:57:28.488474393 +0100
+++ glibc-2.30-build/elf/rtld.c	2020-12-13 14:31:55.671096935 +0100
@@ -1,5 +1,5 @@
 /* Run time dynamic linker.
-   Copyright (C) 1995-2019 Free Software Foundation, Inc.
+   Copyright (C) 1995-2020 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -14,7 +14,7 @@
 
    You should have received a copy of the GNU Lesser General Public
    License along with the GNU C Library; if not, see
-   <http://www.gnu.org/licenses/>.  */
+   <https://www.gnu.org/licenses/>.  */
 
 #include <errno.h>
 #include <dlfcn.h>
@@ -39,6 +39,7 @@
 #include <dl-osinfo.h>
 #include <dl-procinfo.h>
 #include <dl-prop.h>
+#include <dl-vdso.h>
 #include <tls.h>
 #include <stap-probe.h>
 #include <stackinfo.h>
@@ -833,7 +834,7 @@
   _dl_random = NULL;
 }
 
-#include "setup-vdso.h"
+#include <setup-vdso.h>
 
 /* The library search path.  */
 static const char *library_path attribute_relro;
@@ -1008,13 +1009,7 @@
 
       /* Store the pointer.  */
       if (err_str == NULL && largs.result != NULL)
-	{
-	  newp->fptr[cnt] = largs.result;
-
-	  /* The dynamic linker link map is statically allocated,
-	     initialize the data now.  */
-	  GL(dl_rtld_map).l_audit[cnt].cookie = (intptr_t) &GL(dl_rtld_map);
-	}
+	newp->fptr[cnt] = largs.result;
       else
 	newp->fptr[cnt] = NULL;
       ++cnt;
@@ -1030,6 +1025,12 @@
     *last_audit = GLRO(dl_audit) = &newp->ifaces;
   else
     *last_audit = (*last_audit)->next = &newp->ifaces;
+
+  /* The dynamic linker link map is statically allocated, so the
+     cookie in _dl_new_object has not happened.  */
+  link_map_audit_state (&GL (dl_rtld_map), GLRO (dl_naudit))->cookie
+    = (intptr_t) &GL (dl_rtld_map);
+
   ++GLRO(dl_naudit);
 
   /* Mark the DSO as being used for auditing.  */
diff -aurN glibc-2.30/locale/programs/charmap.h glibc-2.30-build/locale/programs/charmap.h
--- glibc-2.30/locale/programs/charmap.h	2019-08-01 06:29:31.000000000 +0200
+++ glibc-2.30-build/locale/programs/charmap.h	2020-12-13 15:41:29.406017935 +0100
@@ -60,7 +60,7 @@
   const char *name;
   uint32_t ucs4;
   int nbytes;
-  unsigned char bytes[0];
+  unsigned char bytes[];
 };
 
 
diff -aurN glibc-2.30/locale/programs/ld-ctype.c glibc-2.30-build/locale/programs/ld-ctype.c
--- glibc-2.30/locale/programs/ld-ctype.c	2019-08-01 06:29:31.000000000 +0200
+++ glibc-2.30-build/locale/programs/ld-ctype.c	2020-02-01 12:52:50.000000000 +0100
@@ -1,4 +1,4 @@
-/* Copyright (C) 1995-2019 Free Software Foundation, Inc.
+/* Copyright (C) 1995-2020 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Contributed by Ulrich Drepper <drepper@gnu.org>, 1995.
 
@@ -13,7 +13,7 @@
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
-   along with this program; if not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, see <https://www.gnu.org/licenses/>.  */
 
 #ifdef HAVE_CONFIG_H
 # include <config.h>
@@ -842,8 +842,6 @@
   for (cnt = 0; cnt < 10; ++cnt)
     if (ctype->mboutdigits[cnt] == NULL)
       {
-	static struct charseq replace[2];
-
 	if (!warned)
 	  {
 	    record_error (0, 0, _("\
@@ -851,10 +849,12 @@
 	    warned = 1;
 	  }
 
-	replace[0].nbytes = 1;
-	replace[0].bytes[0] = '?';
-	replace[0].bytes[1] = '\0';
-	ctype->mboutdigits[cnt] = &replace[0];
+	static const struct charseq replace =
+	  {
+	     .nbytes = 1,
+	     .bytes = "?",
+	  };
+	ctype->mboutdigits[cnt] = (struct charseq *) &replace;
       }
 
   warned = 0;
