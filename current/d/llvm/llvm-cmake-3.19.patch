diff -aurN llvm-11.0.0.src/projects/compiler-rt/cmake/Modules/AddCompilerRT.cmake llvm-11.0.0.src-mod/projects/compiler-rt/cmake/Modules/AddCompilerRT.cmake
--- llvm-11.0.0.src/projects/compiler-rt/cmake/Modules/AddCompilerRT.cmake	2020-10-07 12:10:48.000000000 +0200
+++ llvm-11.0.0.src-mod/projects/compiler-rt/cmake/Modules/AddCompilerRT.cmake	2020-11-22 11:40:23.848496525 +0100
@@ -109,13 +109,11 @@
 
 function(add_asm_sources output)
   set(${output} ${ARGN} PARENT_SCOPE)
-  # Xcode will try to compile asm files as C ('clang -x c'), and that will fail.
-  if (${CMAKE_GENERATOR} STREQUAL "Xcode")
-    enable_language(ASM)
-  else()
-    # Pass ASM file directly to the C++ compiler.
-    set_source_files_properties(${ARGN} PROPERTIES LANGUAGE C)
-  endif()
+  # Make sure ASM language is available.
+  # We explicitly mark the source files as ASM, so they don't get passed to the
+  # C/CXX compiler and hopes that it recognizes them as assembly.
+  enable_language(ASM)
+  set_source_files_properties(${ARGN} PROPERTIES LANGUAGE ASM)
 endfunction()
 
 macro(set_output_name output name arch)
diff -aurN llvm-11.0.0.src/tools/clang/runtime/CMakeLists.txt llvm-11.0.0.src-mod/tools/clang/runtime/CMakeLists.txt
--- llvm-11.0.0.src/tools/clang/runtime/CMakeLists.txt	2020-10-07 12:10:48.000000000 +0200
+++ llvm-11.0.0.src-mod/tools/clang/runtime/CMakeLists.txt	2020-11-22 11:39:31.954879214 +0100
@@ -75,6 +75,7 @@
     CMAKE_ARGS ${CLANG_COMPILER_RT_CMAKE_ARGS}
                -DCMAKE_C_COMPILER=${LLVM_RUNTIME_OUTPUT_INTDIR}/clang
                -DCMAKE_CXX_COMPILER=${LLVM_RUNTIME_OUTPUT_INTDIR}/clang++
+               -DCMAKE_ASM_COMPILER=${LLVM_RUNTIME_OUTPUT_INTDIR}/clang
                -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
                -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}
                -DLLVM_CONFIG_PATH=${LLVM_RUNTIME_OUTPUT_INTDIR}/llvm-config
