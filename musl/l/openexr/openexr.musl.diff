diff -ruBN /tmp/openexr/openexr.SlackBuild /source/l/openexr/openexr.SlackBuild
--- /tmp/openexr/openexr.SlackBuild	2021-01-01 20:50:49.000000000 +0000
+++ /source/l/openexr/openexr.SlackBuild	2021-01-04 22:48:43.000000000 +0000
@@ -60,7 +60,7 @@
   LIBDIRSUFFIX=""
 elif [ "$ARCH" = "x86_64" ]; then
   SLKCFLAGS="-O2 -fPIC"
-  LIBDIRSUFFIX="64"
+  LIBDIRSUFFIX=""
 else
   SLKCFLAGS="-O2"
   LIBDIRSUFFIX=""
@@ -87,6 +87,7 @@
     -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
     -DCMAKE_INSTALL_PREFIX=/usr \
     -DLIB_SUFFIX="$LIBDIRSUFFIX" \
+-DCMAKE_INSTALL_LIBDIR=lib$LIBDIRSUFFIX \
     -DDOC_INSTALL_DIR="doc" \
     -DMAN_INSTALL_DIR=/usr/man \
     .. || exit 1
diff -ruBN /tmp/openexr/openexr.SlackBuild.log /source/l/openexr/openexr.SlackBuild.log
--- /tmp/openexr/openexr.SlackBuild.log	1970-01-01 00:00:00.000000000 +0000
+++ /source/l/openexr/openexr.SlackBuild.log	2021-01-04 23:38:26.000000000 +0000
@@ -0,0 +1,3628 @@
+openexr-2.5.4/
+openexr-2.5.4/README.md
+openexr-2.5.4/LICENSE.md
+openexr-2.5.4/share/
+openexr-2.5.4/share/ci/
+openexr-2.5.4/share/ci/scripts/
+openexr-2.5.4/share/ci/scripts/windows/
+openexr-2.5.4/share/ci/scripts/windows/install_python.ps1
+openexr-2.5.4/share/ci/scripts/windows/install_cmake.ps1
+openexr-2.5.4/share/ci/scripts/windows/install_boost.ps1
+openexr-2.5.4/share/ci/scripts/windows/install_zlib.ps1
+openexr-2.5.4/share/ci/scripts/macos/
+openexr-2.5.4/share/ci/scripts/macos/install_boost.sh
+openexr-2.5.4/share/ci/scripts/macos/install_python.sh
+openexr-2.5.4/share/ci/scripts/linux/
+openexr-2.5.4/share/ci/scripts/linux/install_sonar.sh
+openexr-2.5.4/share/ci/scripts/linux/log_valgrind.sh
+openexr-2.5.4/share/ci/scripts/linux/install_boost.sh
+openexr-2.5.4/share/ci/scripts/linux/install_six.sh
+openexr-2.5.4/share/ci/scripts/linux/install_gdb.sh
+openexr-2.5.4/share/ci/scripts/linux/install_cmake.sh
+openexr-2.5.4/share/ci/scripts/linux/run_gcov.sh
+openexr-2.5.4/share/ci/scripts/linux/install_valgrind.sh
+openexr-2.5.4/OpenEXR_Viewers/
+openexr-2.5.4/OpenEXR_Viewers/README.md
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/scaleImage.cpp
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/CMakeLists.txt
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/GlWindow3d.h
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/namespaceAlias.h
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/ImageView.cpp
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/applyCtl.h
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/main.cpp
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/loadImage.h
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/ImageView.h
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/scaleImage.h
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/applyCtl.cpp
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/loadImage.cpp
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/Makefile.am
+openexr-2.5.4/OpenEXR_Viewers/exrdisplay/GlWindow3d.cpp
+openexr-2.5.4/OpenEXR_Viewers/CMakeLists.txt
+openexr-2.5.4/OpenEXR_Viewers/doc/
+openexr-2.5.4/OpenEXR_Viewers/doc/OpenEXRViewers.pdf
+openexr-2.5.4/OpenEXR_Viewers/doc/OpenEXRViewers.odt
+openexr-2.5.4/OpenEXR_Viewers/doc/Makefile.am
+openexr-2.5.4/OpenEXR_Viewers/bootstrap
+openexr-2.5.4/OpenEXR_Viewers/m4/
+openexr-2.5.4/OpenEXR_Viewers/m4/path.pkgconfig.m4
+openexr-2.5.4/OpenEXR_Viewers/m4/threads.m4
+openexr-2.5.4/OpenEXR_Viewers/m4/ax_cxx_compile_stdcxx.m4
+openexr-2.5.4/OpenEXR_Viewers/m4/path.fltk.m4
+openexr-2.5.4/OpenEXR_Viewers/m4/path.cb.m4
+openexr-2.5.4/OpenEXR_Viewers/m4/path.gl.m4
+openexr-2.5.4/OpenEXR_Viewers/m4/compilelinkrun.m4
+openexr-2.5.4/OpenEXR_Viewers/configure.ac
+openexr-2.5.4/OpenEXR_Viewers/config/
+openexr-2.5.4/OpenEXR_Viewers/config/OpenEXRViewersSetup.cmake
+openexr-2.5.4/OpenEXR_Viewers/config/OpenEXR_ViewersConfig.h.in
+openexr-2.5.4/OpenEXR_Viewers/config/LocateCg.cmake
+openexr-2.5.4/OpenEXR_Viewers/config/ParseConfigure.cmake
+openexr-2.5.4/OpenEXR_Viewers/config/Makefile.am
+openexr-2.5.4/OpenEXR_Viewers/playexr/
+openexr-2.5.4/OpenEXR_Viewers/playexr/ImageBuffers.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/fileNameForFrame.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/playExr.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/CMakeLists.txt
+openexr-2.5.4/OpenEXR_Viewers/playexr/playExr.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/FileReadingThread.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/ctlToLut.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/ctlToLut.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/osDependent.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/FileReadingThread.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/osDependent.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/main.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/ImageBuffers.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/Timer.h
+openexr-2.5.4/OpenEXR_Viewers/playexr/Timer.cpp
+openexr-2.5.4/OpenEXR_Viewers/playexr/Makefile.am
+openexr-2.5.4/OpenEXR_Viewers/playexr/fileNameForFrame.cpp
+openexr-2.5.4/OpenEXR_Viewers/Makefile.am
+openexr-2.5.4/cmake/
+openexr-2.5.4/cmake/clang-format.cmake
+openexr-2.5.4/cmake/SampleCTestScript.cmake
+openexr-2.5.4/cmake/Toolchain-Linux-VFX_Platform15.cmake
+openexr-2.5.4/cmake/Toolchain-mingw.cmake
+openexr-2.5.4/CMakeLists.txt
+openexr-2.5.4/CODEOWNERS
+openexr-2.5.4/IlmBase/
+openexr-2.5.4/IlmBase/Half/
+openexr-2.5.4/IlmBase/Half/halfLimits.h
+openexr-2.5.4/IlmBase/Half/CMakeLists.txt
+openexr-2.5.4/IlmBase/Half/half.cpp
+openexr-2.5.4/IlmBase/Half/eLut.cpp
+openexr-2.5.4/IlmBase/Half/toFloat.h
+openexr-2.5.4/IlmBase/Half/halfExport.h
+openexr-2.5.4/IlmBase/Half/eLut.h
+openexr-2.5.4/IlmBase/Half/halfFunction.h
+openexr-2.5.4/IlmBase/Half/toFloat.cpp
+openexr-2.5.4/IlmBase/Half/half.h
+openexr-2.5.4/IlmBase/Half/Makefile.am
+openexr-2.5.4/IlmBase/README.md
+openexr-2.5.4/IlmBase/CMakeLists.txt
+openexr-2.5.4/IlmBase/bootstrap
+openexr-2.5.4/IlmBase/ImathTest/
+openexr-2.5.4/IlmBase/ImathTest/testFun.cpp
+openexr-2.5.4/IlmBase/ImathTest/testColor.h
+openexr-2.5.4/IlmBase/ImathTest/testBox.cpp
+openexr-2.5.4/IlmBase/ImathTest/testQuatSlerp.cpp
+openexr-2.5.4/IlmBase/ImathTest/testRandom.h
+openexr-2.5.4/IlmBase/ImathTest/testLineAlgo.h
+openexr-2.5.4/IlmBase/ImathTest/testMatrix.h
+openexr-2.5.4/IlmBase/ImathTest/testProcrustes.h
+openexr-2.5.4/IlmBase/ImathTest/testVec.cpp
+openexr-2.5.4/IlmBase/ImathTest/testInvert.cpp
+openexr-2.5.4/IlmBase/ImathTest/testTinySVD.cpp
+openexr-2.5.4/IlmBase/ImathTest/CMakeLists.txt
+openexr-2.5.4/IlmBase/ImathTest/testInvert.h
+openexr-2.5.4/IlmBase/ImathTest/testRoots.cpp
+openexr-2.5.4/IlmBase/ImathTest/testJacobiEigenSolver.cpp
+openexr-2.5.4/IlmBase/ImathTest/testQuat.cpp
+openexr-2.5.4/IlmBase/ImathTest/testMiscMatrixAlgo.h
+openexr-2.5.4/IlmBase/ImathTest/testVec.h
+openexr-2.5.4/IlmBase/ImathTest/testMatrix.cpp
+openexr-2.5.4/IlmBase/ImathTest/testTinySVD.h
+openexr-2.5.4/IlmBase/ImathTest/testExtractSHRT.h
+openexr-2.5.4/IlmBase/ImathTest/testFrustumTest.cpp
+openexr-2.5.4/IlmBase/ImathTest/testExtractSHRT.cpp
+openexr-2.5.4/IlmBase/ImathTest/testQuatSetRotation.cpp
+openexr-2.5.4/IlmBase/ImathTest/testFrustum.h
+openexr-2.5.4/IlmBase/ImathTest/testMiscMatrixAlgo.cpp
+openexr-2.5.4/IlmBase/ImathTest/testBoxAlgo.cpp
+openexr-2.5.4/IlmBase/ImathTest/testJacobiEigenSolver.h
+openexr-2.5.4/IlmBase/ImathTest/testQuatSetRotation.h
+openexr-2.5.4/IlmBase/ImathTest/testExtractEuler.cpp
+openexr-2.5.4/IlmBase/ImathTest/testProcrustes.cpp
+openexr-2.5.4/IlmBase/ImathTest/testQuat.h
+openexr-2.5.4/IlmBase/ImathTest/main.cpp
+openexr-2.5.4/IlmBase/ImathTest/testBox.h
+openexr-2.5.4/IlmBase/ImathTest/testShear.cpp
+openexr-2.5.4/IlmBase/ImathTest/testColor.cpp
+openexr-2.5.4/IlmBase/ImathTest/testQuatSlerp.h
+openexr-2.5.4/IlmBase/ImathTest/testBoxAlgo.h
+openexr-2.5.4/IlmBase/ImathTest/testShear.h
+openexr-2.5.4/IlmBase/ImathTest/testExtractEuler.h
+openexr-2.5.4/IlmBase/ImathTest/testLineAlgo.cpp
+openexr-2.5.4/IlmBase/ImathTest/testFrustumTest.h
+openexr-2.5.4/IlmBase/ImathTest/testFrustum.cpp
+openexr-2.5.4/IlmBase/ImathTest/testRandom.cpp
+openexr-2.5.4/IlmBase/ImathTest/Makefile.am
+openexr-2.5.4/IlmBase/ImathTest/testRoots.h
+openexr-2.5.4/IlmBase/ImathTest/testFun.h
+openexr-2.5.4/IlmBase/m4/
+openexr-2.5.4/IlmBase/m4/threads.m4
+openexr-2.5.4/IlmBase/m4/ax_cxx_compile_stdcxx.m4
+openexr-2.5.4/IlmBase/HalfTest/
+openexr-2.5.4/IlmBase/HalfTest/testSize.h
+openexr-2.5.4/IlmBase/HalfTest/testFunction.h
+openexr-2.5.4/IlmBase/HalfTest/testLimits.h
+openexr-2.5.4/IlmBase/HalfTest/testError.cpp
+openexr-2.5.4/IlmBase/HalfTest/testToFloat.cpp
+openexr-2.5.4/IlmBase/HalfTest/CMakeLists.txt
+openexr-2.5.4/IlmBase/HalfTest/testArithmetic.h
+openexr-2.5.4/IlmBase/HalfTest/testFunction.cpp
+openexr-2.5.4/IlmBase/HalfTest/testError.h
+openexr-2.5.4/IlmBase/HalfTest/testArithmetic.cpp
+openexr-2.5.4/IlmBase/HalfTest/testToFloat.h
+openexr-2.5.4/IlmBase/HalfTest/testBitPatterns.h
+openexr-2.5.4/IlmBase/HalfTest/testClassification.h
+openexr-2.5.4/IlmBase/HalfTest/testLimits.cpp
+openexr-2.5.4/IlmBase/HalfTest/main.cpp
+openexr-2.5.4/IlmBase/HalfTest/testClassification.cpp
+openexr-2.5.4/IlmBase/HalfTest/testSize.cpp
+openexr-2.5.4/IlmBase/HalfTest/testBitPatterns.cpp
+openexr-2.5.4/IlmBase/HalfTest/Makefile.am
+openexr-2.5.4/IlmBase/IexTest/
+openexr-2.5.4/IlmBase/IexTest/CMakeLists.txt
+openexr-2.5.4/IlmBase/IexTest/testBaseExc.h
+openexr-2.5.4/IlmBase/IexTest/main.cpp
+openexr-2.5.4/IlmBase/IexTest/Makefile.am
+openexr-2.5.4/IlmBase/IexTest/testBaseExc.cpp
+openexr-2.5.4/IlmBase/configure.ac
+openexr-2.5.4/IlmBase/IlmThread/
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadMutexWin32.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThread.cpp
+openexr-2.5.4/IlmBase/IlmThread/CMakeLists.txt
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadNamespace.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadWin32.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadMutex.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadSemaphore.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadSemaphorePosix.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadPosix.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadSemaphore.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThread.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadMutex.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadForward.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadMutexPosix.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadExport.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadSemaphoreWin32.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadPool.h
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadPool.cpp
+openexr-2.5.4/IlmBase/IlmThread/Makefile.am
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadSemaphoreOSX.cpp
+openexr-2.5.4/IlmBase/IlmThread/IlmThreadSemaphorePosixCompat.cpp
+openexr-2.5.4/IlmBase/config/
+openexr-2.5.4/IlmBase/config/IlmBaseConfigInternal.h.in_cmake
+openexr-2.5.4/IlmBase/config/LibraryDefine.cmake
+openexr-2.5.4/IlmBase/config/CMakeLists.txt
+openexr-2.5.4/IlmBase/config/IlmBaseConfigInternal.h.in
+openexr-2.5.4/IlmBase/config/IlmBaseConfig.h.in_cmake
+openexr-2.5.4/IlmBase/config/ParseConfigure.cmake
+openexr-2.5.4/IlmBase/config/IlmBaseConfig.cmake.in
+openexr-2.5.4/IlmBase/config/Makefile.am
+openexr-2.5.4/IlmBase/config/IlmBaseSetup.cmake
+openexr-2.5.4/IlmBase/config/IlmBaseConfig.h.in
+openexr-2.5.4/IlmBase/Iex/
+openexr-2.5.4/IlmBase/Iex/IexForward.h
+openexr-2.5.4/IlmBase/Iex/IexThrowErrnoExc.h
+openexr-2.5.4/IlmBase/Iex/IexErrnoExc.h
+openexr-2.5.4/IlmBase/Iex/CMakeLists.txt
+openexr-2.5.4/IlmBase/Iex/IexMathExc.h
+openexr-2.5.4/IlmBase/Iex/IexThrowErrnoExc.cpp
+openexr-2.5.4/IlmBase/Iex/IexNamespace.h
+openexr-2.5.4/IlmBase/Iex/IexBaseExc.cpp
+openexr-2.5.4/IlmBase/Iex/Iex.h
+openexr-2.5.4/IlmBase/Iex/IexBaseExc.h
+openexr-2.5.4/IlmBase/Iex/Makefile.am
+openexr-2.5.4/IlmBase/Iex/IexExport.h
+openexr-2.5.4/IlmBase/Iex/IexMacros.h
+openexr-2.5.4/IlmBase/IlmBase.pc.in
+openexr-2.5.4/IlmBase/IexMath/
+openexr-2.5.4/IlmBase/IexMath/IexMathFloatExc.h
+openexr-2.5.4/IlmBase/IexMath/CMakeLists.txt
+openexr-2.5.4/IlmBase/IexMath/IexMathFpu.h
+openexr-2.5.4/IlmBase/IexMath/IexMathFloatExc.cpp
+openexr-2.5.4/IlmBase/IexMath/IexMathIeeeExc.h
+openexr-2.5.4/IlmBase/IexMath/IexMathFpu.cpp
+openexr-2.5.4/IlmBase/IexMath/Makefile.am
+openexr-2.5.4/IlmBase/Makefile.am
+openexr-2.5.4/IlmBase/.gitignore
+openexr-2.5.4/IlmBase/Imath/
+openexr-2.5.4/IlmBase/Imath/ImathColorAlgo.cpp
+openexr-2.5.4/IlmBase/Imath/ImathFun.cpp
+openexr-2.5.4/IlmBase/Imath/ImathNamespace.h
+openexr-2.5.4/IlmBase/Imath/ImathLineAlgo.h
+openexr-2.5.4/IlmBase/Imath/ImathLimits.h
+openexr-2.5.4/IlmBase/Imath/ImathBoxAlgo.h
+openexr-2.5.4/IlmBase/Imath/ImathGLU.h
+openexr-2.5.4/IlmBase/Imath/ImathRoots.h
+openexr-2.5.4/IlmBase/Imath/ImathColor.h
+openexr-2.5.4/IlmBase/Imath/ImathGL.h
+openexr-2.5.4/IlmBase/Imath/CMakeLists.txt
+openexr-2.5.4/IlmBase/Imath/ImathFrame.h
+openexr-2.5.4/IlmBase/Imath/ImathPlane.h
+openexr-2.5.4/IlmBase/Imath/ImathVecAlgo.h
+openexr-2.5.4/IlmBase/Imath/ImathFrustumTest.h
+openexr-2.5.4/IlmBase/Imath/ImathInterval.h
+openexr-2.5.4/IlmBase/Imath/ImathExc.h
+openexr-2.5.4/IlmBase/Imath/ImathSphere.h
+openexr-2.5.4/IlmBase/Imath/ImathPlatform.h
+openexr-2.5.4/IlmBase/Imath/ImathExport.h
+openexr-2.5.4/IlmBase/Imath/ImathVec.cpp
+openexr-2.5.4/IlmBase/Imath/ImathMatrixAlgo.cpp
+openexr-2.5.4/IlmBase/Imath/ImathRandom.h
+openexr-2.5.4/IlmBase/Imath/ImathMatrix.h
+openexr-2.5.4/IlmBase/Imath/ImathHalfLimits.h
+openexr-2.5.4/IlmBase/Imath/ImathFrustum.h
+openexr-2.5.4/IlmBase/Imath/ImathFun.h
+openexr-2.5.4/IlmBase/Imath/ImathColorAlgo.h
+openexr-2.5.4/IlmBase/Imath/ImathVec.h
+openexr-2.5.4/IlmBase/Imath/ImathBox.h
+openexr-2.5.4/IlmBase/Imath/ImathMath.h
+openexr-2.5.4/IlmBase/Imath/ImathLine.h
+openexr-2.5.4/IlmBase/Imath/ImathForward.h
+openexr-2.5.4/IlmBase/Imath/ImathRandom.cpp
+openexr-2.5.4/IlmBase/Imath/Makefile.am
+openexr-2.5.4/IlmBase/Imath/ImathQuat.h
+openexr-2.5.4/IlmBase/Imath/ImathExc.cpp
+openexr-2.5.4/IlmBase/Imath/ImathEuler.h
+openexr-2.5.4/IlmBase/Imath/ImathShear.h
+openexr-2.5.4/IlmBase/Imath/ImathInt64.h
+openexr-2.5.4/IlmBase/Imath/ImathMatrixAlgo.h
+openexr-2.5.4/doc/
+openexr-2.5.4/doc/OpenEXRFileLayout.odt
+openexr-2.5.4/doc/TechnicalIntroduction.odt
+openexr-2.5.4/doc/MultiViewOpenEXR.odt
+openexr-2.5.4/doc/ReadingAndWritingImageFiles.odt
+openexr-2.5.4/.github/
+openexr-2.5.4/.github/workflows/
+openexr-2.5.4/.github/workflows/ci_workflow.yml
+openexr-2.5.4/.github/workflows/analysis_workflow.yml
+openexr-2.5.4/.clang-format
+openexr-2.5.4/CONTRIBUTORS.md
+openexr-2.5.4/OpenEXR/
+openexr-2.5.4/OpenEXR/PATENTS
+openexr-2.5.4/OpenEXR/README.md
+openexr-2.5.4/OpenEXR/OpenEXR.pc.in
+openexr-2.5.4/OpenEXR/exrmaketiled/
+openexr-2.5.4/OpenEXR/exrmaketiled/makeTiled.h
+openexr-2.5.4/OpenEXR/exrmaketiled/Image.cpp
+openexr-2.5.4/OpenEXR/exrmaketiled/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrmaketiled/Image.h
+openexr-2.5.4/OpenEXR/exrmaketiled/namespaceAlias.h
+openexr-2.5.4/OpenEXR/exrmaketiled/makeTiled.cpp
+openexr-2.5.4/OpenEXR/exrmaketiled/main.cpp
+openexr-2.5.4/OpenEXR/exrmaketiled/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImfExamples/
+openexr-2.5.4/OpenEXR/IlmImfExamples/drawImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/rgbaInterfaceExamples.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/CMakeLists.txt
+openexr-2.5.4/OpenEXR/IlmImfExamples/namespaceAlias.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/rgbaInterfaceExamples.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/rgbaInterfaceTiledExamples.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/previewImageExamples.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/lowLevelIoExamples.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/lowLevelIoExamples.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/main.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/generalInterfaceExamples.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/generalInterfaceTiledExamples.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/generalInterfaceExamples.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/rgbaInterfaceTiledExamples.cpp
+openexr-2.5.4/OpenEXR/IlmImfExamples/previewImageExamples.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImfExamples/drawImage.h
+openexr-2.5.4/OpenEXR/IlmImfExamples/generalInterfaceTiledExamples.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/
+openexr-2.5.4/OpenEXR/exrenvmap/blurImage.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/makeLatLongMap.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/EnvmapImage.h
+openexr-2.5.4/OpenEXR/exrenvmap/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrenvmap/makeLatLongMap.h
+openexr-2.5.4/OpenEXR/exrenvmap/readInputImage.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/namespaceAlias.h
+openexr-2.5.4/OpenEXR/exrenvmap/resizeImage.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/makeCubeMap.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/makeCubeMap.h
+openexr-2.5.4/OpenEXR/exrenvmap/readInputImage.h
+openexr-2.5.4/OpenEXR/exrenvmap/main.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/resizeImage.h
+openexr-2.5.4/OpenEXR/exrenvmap/EnvmapImage.cpp
+openexr-2.5.4/OpenEXR/exrenvmap/Makefile.am
+openexr-2.5.4/OpenEXR/exrenvmap/blurImage.h
+openexr-2.5.4/OpenEXR/CMakeLists.txt
+openexr-2.5.4/OpenEXR/doc/
+openexr-2.5.4/OpenEXR/doc/OpenEXRFileLayout.pdf
+openexr-2.5.4/OpenEXR/doc/CMakeLists.txt
+openexr-2.5.4/OpenEXR/doc/InterpretingDeepPixels.pdf
+openexr-2.5.4/OpenEXR/doc/OpenEXRFileLayout.odt
+openexr-2.5.4/OpenEXR/doc/images/
+openexr-2.5.4/OpenEXR/doc/images/windowExample1.big.png
+openexr-2.5.4/OpenEXR/doc/images/screenwin.big.png
+openexr-2.5.4/OpenEXR/doc/images/cubeMap.png
+openexr-2.5.4/OpenEXR/doc/images/windowExample2.png
+openexr-2.5.4/OpenEXR/doc/images/windowExample1.png
+openexr-2.5.4/OpenEXR/doc/images/screenwin.png
+openexr-2.5.4/OpenEXR/doc/images/tiles.big.png
+openexr-2.5.4/OpenEXR/doc/images/windowExample2.big.png
+openexr-2.5.4/OpenEXR/doc/images/tiles.png
+openexr-2.5.4/OpenEXR/doc/images/latlongMap.png
+openexr-2.5.4/OpenEXR/doc/images/cubeMap.big.png
+openexr-2.5.4/OpenEXR/doc/images/latlongMap.big.png
+openexr-2.5.4/OpenEXR/doc/TheoryDeepPixels.pdf
+openexr-2.5.4/OpenEXR/doc/TechnicalIntroduction.odt
+openexr-2.5.4/OpenEXR/doc/MultiViewOpenEXR.pdf
+openexr-2.5.4/OpenEXR/doc/source_images/
+openexr-2.5.4/OpenEXR/doc/source_images/screenwin.fig
+openexr-2.5.4/OpenEXR/doc/source_images/cubeMap.fig
+openexr-2.5.4/OpenEXR/doc/source_images/blobs.png
+openexr-2.5.4/OpenEXR/doc/source_images/windowExample1.fig
+openexr-2.5.4/OpenEXR/doc/source_images/latlongMap.fig
+openexr-2.5.4/OpenEXR/doc/source_images/dataDisplayWindow.fig
+openexr-2.5.4/OpenEXR/doc/source_images/tiles.fig
+openexr-2.5.4/OpenEXR/doc/source_images/windowExample2.fig
+openexr-2.5.4/OpenEXR/doc/source_images/kapaa.png
+openexr-2.5.4/OpenEXR/doc/source_images/still.png
+openexr-2.5.4/OpenEXR/doc/TechnicalIntroduction.pdf
+openexr-2.5.4/OpenEXR/doc/MultiViewOpenEXR.odt
+openexr-2.5.4/OpenEXR/doc/ReadingAndWritingImageFiles.odt
+openexr-2.5.4/OpenEXR/doc/ReadingAndWritingImageFiles.pdf
+openexr-2.5.4/OpenEXR/doc/InterpretingDeepPixels.docx
+openexr-2.5.4/OpenEXR/doc/Makefile.am
+openexr-2.5.4/OpenEXR/doc/TechnicalIntroduction.docx
+openexr-2.5.4/OpenEXR/.cproject
+openexr-2.5.4/OpenEXR/bootstrap
+openexr-2.5.4/OpenEXR/m4/
+openexr-2.5.4/OpenEXR/m4/path.pkgconfig.m4
+openexr-2.5.4/OpenEXR/m4/threads.m4
+openexr-2.5.4/OpenEXR/m4/ax_cxx_compile_stdcxx.m4
+openexr-2.5.4/OpenEXR/m4/compilelinkrun.m4
+openexr-2.5.4/OpenEXR/IlmImfUtil/
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageChannelRenaming.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageDataWindow.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImageIO.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImageChannel.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImageLevel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageIO.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImageIO.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImageLevel.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageDataWindow.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/CMakeLists.txt
+openexr-2.5.4/OpenEXR/IlmImfUtil/README
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImageIO.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImageIO.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageIO.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImage.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageLevel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageChannel.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImageLevel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImageChannel.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfSampleCountChannel.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfSampleCountChannel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageChannel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImageLevel.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImage.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfUtilExport.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfFlatImageChannel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImageChannel.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtil/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfDeepImage.h
+openexr-2.5.4/OpenEXR/IlmImfUtil/ImfImageLevel.h
+openexr-2.5.4/OpenEXR/exrmakepreview/
+openexr-2.5.4/OpenEXR/exrmakepreview/makePreview.h
+openexr-2.5.4/OpenEXR/exrmakepreview/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrmakepreview/main.cpp
+openexr-2.5.4/OpenEXR/exrmakepreview/makePreview.cpp
+openexr-2.5.4/OpenEXR/exrmakepreview/Makefile.am
+openexr-2.5.4/OpenEXR/.project
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/testFlatImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/tmpDir.h
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/CMakeLists.txt
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/testFlatImage.h
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/testIO.h
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/testDeepImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/testDeepImage.h
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/testIO.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/main.cpp
+openexr-2.5.4/OpenEXR/IlmImfUtilTest/Makefile.am
+openexr-2.5.4/OpenEXR/configure.ac
+openexr-2.5.4/OpenEXR/IlmImfTest/
+openexr-2.5.4/OpenEXR/IlmImfTest/testLineOrder.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testAttributes.h
+openexr-2.5.4/OpenEXR/IlmImfTest/scanline_with_deepscanline_type.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_dwab_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testChannels.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_bad_bounds_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testLut.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testNativeFormat.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartThreading.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testSampleImages.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledRgba.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_dwaa_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testPreviewImage.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testMalformedImages.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartFileMixingBasic.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testBackwardCompatibility.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCompositeDeepScanLine.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testLargeDataWindowOffsets.h
+openexr-2.5.4/OpenEXR/IlmImfTest/test_native2.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartFileMixingBasic.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testBadTypeAttributes.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testOptimizedInterleavePatterns.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledCompression.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyPixels.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testChannels.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepTiledBasic.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledCopyPixels.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCompositeDeepScanLine.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepScanLineHuge.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testWav.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testSharedFrameBuffer.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiScanlinePartThreading.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiScanlinePartThreading.h
+openexr-2.5.4/OpenEXR/IlmImfTest/lineOrder_increasing.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_zips.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_bad_pos_bounds_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartSharedAttributes.h
+openexr-2.5.4/OpenEXR/IlmImfTest/tiled_with_scanlineimage_type.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_rle.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledLineOrder.h
+openexr-2.5.4/OpenEXR/IlmImfTest/tmpDir.h
+openexr-2.5.4/OpenEXR/IlmImfTest/invalid.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyDeepTiled.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testPreviewImage.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/tiled.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/compareB44.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMagic.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/CMakeLists.txt
+openexr-2.5.4/OpenEXR/IlmImfTest/testWav.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testOptimized.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testCompression.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepScanLineBasic.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testConversion.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/invalid_shared_attrs_multipart.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testOptimizedInterleavePatterns.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepScanLineBasic.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyMultiPartFile.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testStandardAttributes.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/tiled_with_deeptile_type.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testConversion.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testInputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testSampleImages.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testYca.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyPixels.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testLut.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_b44.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiTiledPartThreading.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/random.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testSharedFrameBuffer.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_bad_pos_bounds_pxr24.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/v1.7.test.planar.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testCustomAttributes.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/tiled_with_deepscanline_type.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledLineOrder.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/TestUtilFStream.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartThreading.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_bad_neg_bounds_pxr24.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_dwab_v1.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_b44_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledYa.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testXdr.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDwaCompressorSimd.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testOptimized.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testScanLineApi.h
+openexr-2.5.4/OpenEXR/IlmImfTest/v1.7.test.interleaved.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyDeepScanLine.h
+openexr-2.5.4/OpenEXR/IlmImfTest/compareDwa.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledYa.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCustomAttributes.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testFutureProofing.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMagic.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testRgbaThreading.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledCopyPixels.h
+openexr-2.5.4/OpenEXR/IlmImfTest/compareFloat.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testIsComplete.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testCompression.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyDeepTiled.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testYca.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepScanLineMultipleRead.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testB44ExpLogTable.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testNativeFormat.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartSharedAttributes.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMalformedImages.h
+openexr-2.5.4/OpenEXR/IlmImfTest/scanline_with_deeptiled_type.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/random.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepScanLineMultipleRead.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledCompression.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testScanLineApi.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testDwaLookups.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_early_eof_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/v1.7.test.1.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testB44ExpLogTable.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testPartHelper.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testInputPart.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testXdr.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testHuf.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartApi.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testTiledRgba.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDwaCompressorSimd.h
+openexr-2.5.4/OpenEXR/IlmImfTest/main.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testFutureProofing.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDwaLookups.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/test_native1.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testRgba.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_none.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/compareFloat.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testBackwardCompatibility.h
+openexr-2.5.4/OpenEXR/IlmImfTest/lineOrder_decreasing.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyMultiPartFile.h
+openexr-2.5.4/OpenEXR/IlmImfTest/v1.7.test.tiled.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_zip.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepScanLineHuge.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testExistingStreams.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testDeepTiledBasic.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testIsComplete.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testRgba.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/bswap_32.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiView.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_invalid_unknown.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testExistingStreams.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiPartApi.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testRle.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testAttributes.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/scanline_with_tiledimage_type.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testLargeDataWindowOffsets.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testCopyDeepScanLine.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_dwaa_v1.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testStandardAttributes.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testRle.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_dwab_v2.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiTiledPartThreading.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testHuf.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testRgbaThreading.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_dwaa_v2.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testPartHelper.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/compareDwa.h
+openexr-2.5.4/OpenEXR/IlmImfTest/testLineOrder.cpp
+openexr-2.5.4/OpenEXR/IlmImfTest/testBadTypeAttributes.h
+openexr-2.5.4/OpenEXR/IlmImfTest/comp_short_decode_piz.exr
+openexr-2.5.4/OpenEXR/IlmImfTest/testMultiView.h
+openexr-2.5.4/OpenEXR/IlmImfTest/compareB44.h
+openexr-2.5.4/OpenEXR/exrheader/
+openexr-2.5.4/OpenEXR/exrheader/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrheader/main.cpp
+openexr-2.5.4/OpenEXR/exrheader/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/tmpDir.h
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/CMakeLists.txt
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzScanLines.h
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/fuzzFile.cpp
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzDeepScanLines.h
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzDeepTiles.cpp
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzDeepScanLines.cpp
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzDeepTiles.h
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzTiles.cpp
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/main.cpp
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzTiles.h
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/testFuzzScanLines.cpp
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImfFuzzTest/fuzzFile.h
+openexr-2.5.4/OpenEXR/exrmultipart/
+openexr-2.5.4/OpenEXR/exrmultipart/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrmultipart/Makefile.am
+openexr-2.5.4/OpenEXR/exrmultipart/exrmultipart.cpp
+openexr-2.5.4/OpenEXR/exrstdattr/
+openexr-2.5.4/OpenEXR/exrstdattr/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrstdattr/main.cpp
+openexr-2.5.4/OpenEXR/exrstdattr/Makefile.am
+openexr-2.5.4/OpenEXR/config/
+openexr-2.5.4/OpenEXR/config/OpenEXRConfigInternal.h.in_cmake
+openexr-2.5.4/OpenEXR/config/LibraryDefine.cmake
+openexr-2.5.4/OpenEXR/config/OpenEXRSetup.cmake
+openexr-2.5.4/OpenEXR/config/OpenEXRConfig.cmake.in
+openexr-2.5.4/OpenEXR/config/CMakeLists.txt
+openexr-2.5.4/OpenEXR/config/OpenEXRConfig.h.in_cmake
+openexr-2.5.4/OpenEXR/config/OpenEXRConfig.h.in
+openexr-2.5.4/OpenEXR/config/ParseConfigure.cmake
+openexr-2.5.4/OpenEXR/config/OpenEXRConfigInternal.h.in
+openexr-2.5.4/OpenEXR/config/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImf/
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledInputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfHeader.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledOutputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompositeDeepScanLine.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfPartType.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfPixelType.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfZipCompressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfB44Compressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfKeyCodeAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDwaCompressorSimd.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfChromaticities.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfChromaticitiesAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfPartType.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTileOffsets.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompositeDeepScanLine.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRational.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfStdIO.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledOutputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfSystemSpecific.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfStringVectorAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfGenericOutputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRgba.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTestFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDoubleAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineOutputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfRgbaYca.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepImageStateAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfChannelList.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfGenericOutputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfChannelList.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfVecAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfEnvmap.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDwaCompressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfAutoArray.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputPartData.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledOutputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfWav.cpp
+openexr-2.5.4/OpenEXR/IlmImf/CMakeLists.txt
+openexr-2.5.4/OpenEXR/IlmImf/ImfTimeCodeAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfLut.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfWav.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfHuf.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfIO.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfStandardAttributes.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfBoxAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepImageStateAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledMisc.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfHeader.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfMultiView.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfBoxAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTileDescriptionAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfEnvmapAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTestFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfIntAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfThreading.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfVersion.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfSystemSpecific.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfKeyCodeAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputPartData.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfRgbaFile.h
+openexr-2.5.4/OpenEXR/IlmImf/dwaLookups.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledMisc.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfOptimizedPixelReading.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfFastHuf.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfMatrixAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfEnvmap.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPartHelper.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfFastHuf.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfLineOrderAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDoubleAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfEnvmapAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineInputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTimeCode.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledInputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfGenericInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRational.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledOutputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfArray.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfFramesPerSecond.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfFrameBuffer.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledRgbaFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRleCompressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfLineOrderAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfRle.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledOutputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/dwaLookups.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledOutputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRleCompressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfSimd.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledOutputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfZip.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfMisc.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineOutputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfFloatAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfThreading.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepImageState.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfConvert.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfStdIO.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfChromaticitiesAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfConvert.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDwaCompressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTileDescription.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineOutputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPreviewImage.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfHuf.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputStreamMutex.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRgbaFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfIO.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPizCompressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputStreamMutex.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompression.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRgbaYca.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfMultiView.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPreviewImageAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfStringAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/b44ExpLogTable.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfMisc.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompressionAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfVersion.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputPartData.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledInputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompressionAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfOpaqueAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfCheckedArithmetic.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepCompositing.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfStandardAttributes.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfFloatAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputPartData.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfFramesPerSecond.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRationalAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfAcesFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfMultiPartOutputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTimeCodeAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTileOffsets.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTileDescriptionAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfLineOrder.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfScanLineInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfChannelListAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfExport.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfLut.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledInputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfOpaqueAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfStringAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfMatrixAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfGenericInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfCRgbaFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfCRgbaFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfXdr.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfInt64.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfB44Compressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPxr24Compressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfMultiPartInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfStringVectorAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfCompressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepTiledOutputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfScanLineInputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfZipCompressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfVecAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfIntAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineInputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfRationalAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfFrameBuffer.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfRle.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPizCompressor.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfPreviewImage.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPreviewImageAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfZip.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfNamespace.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfFloatVectorAttribute.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfFloatVectorAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepCompositing.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfKeyCode.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepScanLineOutputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepFrameBuffer.cpp
+openexr-2.5.4/OpenEXR/IlmImf/Makefile.am
+openexr-2.5.4/OpenEXR/IlmImf/ImfKeyCode.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfInputPart.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfChannelListAttribute.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTiledRgbaFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfChromaticities.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfMultiPartOutputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfName.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfAcesFile.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfTimeCode.h
+openexr-2.5.4/OpenEXR/IlmImf/b44ExpLogTable.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfMultiPartInputFile.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfPxr24Compressor.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfForward.h
+openexr-2.5.4/OpenEXR/IlmImf/ImfOutputPart.cpp
+openexr-2.5.4/OpenEXR/IlmImf/ImfDeepFrameBuffer.h
+openexr-2.5.4/OpenEXR/exrbuild/
+openexr-2.5.4/OpenEXR/exrbuild/exrbuild.cpp
+openexr-2.5.4/OpenEXR/exrbuild/Makefile.am
+openexr-2.5.4/OpenEXR/exrmultiview/
+openexr-2.5.4/OpenEXR/exrmultiview/makeMultiView.cpp
+openexr-2.5.4/OpenEXR/exrmultiview/Image.cpp
+openexr-2.5.4/OpenEXR/exrmultiview/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exrmultiview/Image.h
+openexr-2.5.4/OpenEXR/exrmultiview/namespaceAlias.h
+openexr-2.5.4/OpenEXR/exrmultiview/makeMultiView.h
+openexr-2.5.4/OpenEXR/exrmultiview/main.cpp
+openexr-2.5.4/OpenEXR/exrmultiview/Makefile.am
+openexr-2.5.4/OpenEXR/exr2aces/
+openexr-2.5.4/OpenEXR/exr2aces/CMakeLists.txt
+openexr-2.5.4/OpenEXR/exr2aces/main.cpp
+openexr-2.5.4/OpenEXR/exr2aces/Makefile.am
+openexr-2.5.4/OpenEXR/Makefile.am
+openexr-2.5.4/OpenEXR/.gitignore
+openexr-2.5.4/CHANGES.md
+openexr-2.5.4/util/
+openexr-2.5.4/util/reformat.sh
+openexr-2.5.4/INSTALL.md
+openexr-2.5.4/GOVERNANCE.md
+openexr-2.5.4/CONTRIBUTING.md
+openexr-2.5.4/SECURITY.md
+openexr-2.5.4/CODE_OF_CONDUCT.md
+openexr-2.5.4/sonar-project.properties
+openexr-2.5.4/Contrib/
+openexr-2.5.4/Contrib/NuGet/
+openexr-2.5.4/Contrib/NuGet/OpenEXR-msvc-x64.nuspec
+openexr-2.5.4/Contrib/NuGet/OpenEXR-msvc-x86-build.nuget.bat
+openexr-2.5.4/Contrib/NuGet/OpenEXR-msvc-x64-build.nuget.bat
+openexr-2.5.4/Contrib/NuGet/OpenEXR-msvc-x86.nuspec
+openexr-2.5.4/Contrib/NuGet/OpenEXR-msvc-x64.targets
+openexr-2.5.4/Contrib/NuGet/OpenEXR-msvc-x86.targets
+openexr-2.5.4/Contrib/DtexToExr/
+openexr-2.5.4/Contrib/DtexToExr/Makefile.test
+openexr-2.5.4/Contrib/DtexToExr/README
+openexr-2.5.4/Contrib/DtexToExr/PxDeepUtils.cpp
+openexr-2.5.4/Contrib/DtexToExr/bootstrap
+openexr-2.5.4/Contrib/DtexToExr/m4/
+openexr-2.5.4/Contrib/DtexToExr/m4/path.pkgconfig.m4
+openexr-2.5.4/Contrib/DtexToExr/m4/threads.m4
+openexr-2.5.4/Contrib/DtexToExr/m4/compilelinkrun.m4
+openexr-2.5.4/Contrib/DtexToExr/ChangeLog
+openexr-2.5.4/Contrib/DtexToExr/PxDeepOutRow.h
+openexr-2.5.4/Contrib/DtexToExr/configure.ac
+openexr-2.5.4/Contrib/DtexToExr/DtexToExr.cpp
+openexr-2.5.4/Contrib/DtexToExr/PxOneChanDeepAlpha.h
+openexr-2.5.4/Contrib/DtexToExr/PxDeepUtils.h
+openexr-2.5.4/Contrib/DtexToExr/PxOneChanDeepOpacity.h
+openexr-2.5.4/Contrib/DtexToExr/PxBaseDeepHelper.h
+openexr-2.5.4/Contrib/DtexToExr/PxFourChanDeepRgba.h
+openexr-2.5.4/Contrib/DtexToExr/Makefile.am
+openexr-2.5.4/Contrib/DtexToExr/AUTHORS
+openexr-2.5.4/Contrib/DtexToExr/PxDeepOutPixel.h
+openexr-2.5.4/ASWF/
+openexr-2.5.4/ASWF/charter/
+openexr-2.5.4/ASWF/charter/OpenEXR-Technical-Charter.md
+openexr-2.5.4/ASWF/images/
+openexr-2.5.4/ASWF/images/aswf.png
+openexr-2.5.4/ASWF/images/openexr-logo.jpg
+openexr-2.5.4/ASWF/proposal/
+openexr-2.5.4/ASWF/proposal/OpenEXR-Adoption-Proposal.md
+openexr-2.5.4/ASWF/tsc-meetings/
+openexr-2.5.4/ASWF/tsc-meetings/2020-02-06.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-10-03.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-10-17.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-05-02.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-08-29.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-09-26.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-03-05.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-09-05.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-07-18.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-08-16.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-07-11.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-01-16.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-05-09.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-08-22.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-04-23.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-05-21.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-07-25.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-09-19.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-09-17.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-05-14.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-02-20.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-06-27.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-11-21.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-11-15.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-06-20.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-06-13.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-09-12.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-08-08.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-02-27.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-04-02.md
+openexr-2.5.4/ASWF/tsc-meetings/2019-10-24.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-04-16.md
+openexr-2.5.4/ASWF/tsc-meetings/2020-01-09.md
+openexr-2.5.4/ASWF/legal/
+openexr-2.5.4/ASWF/legal/OpenEXR Individual Contributor License Agreement.md
+openexr-2.5.4/ASWF/legal/OpenEXR Corporate Contributor License Agreement.md
+openexr-2.5.4/PyIlmBase/
+openexr-2.5.4/PyIlmBase/README.md
+openexr-2.5.4/PyIlmBase/PyImathNumpy/
+openexr-2.5.4/PyIlmBase/PyImathNumpy/imathnumpymodule.cpp
+openexr-2.5.4/PyIlmBase/PyImathNumpy/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/PyImathNumpy/Makefile.am
+openexr-2.5.4/PyIlmBase/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/doc/
+openexr-2.5.4/PyIlmBase/doc/Makefile.am
+openexr-2.5.4/PyIlmBase/PyImathNumpyTest/
+openexr-2.5.4/PyIlmBase/PyImathNumpyTest/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/PyImathNumpyTest/pyImathNumpyTest.in
+openexr-2.5.4/PyIlmBase/PyImathNumpyTest/Makefile.am
+openexr-2.5.4/PyIlmBase/bootstrap
+openexr-2.5.4/PyIlmBase/m4/
+openexr-2.5.4/PyIlmBase/m4/path.pkgconfig.m4
+openexr-2.5.4/PyIlmBase/m4/threads.m4
+openexr-2.5.4/PyIlmBase/m4/ax_cxx_compile_stdcxx.m4
+openexr-2.5.4/PyIlmBase/m4/compilelinkrun.m4
+openexr-2.5.4/PyIlmBase/configure.ac
+openexr-2.5.4/PyIlmBase/PyIex/
+openexr-2.5.4/PyIlmBase/PyIex/PyIex.cpp
+openexr-2.5.4/PyIlmBase/PyIex/PyIexTypeTranslator.h
+openexr-2.5.4/PyIlmBase/PyIex/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/PyIex/iexmodule.cpp
+openexr-2.5.4/PyIlmBase/PyIex/PyIex.h
+openexr-2.5.4/PyIlmBase/PyIex/PyIexExport.h
+openexr-2.5.4/PyIlmBase/PyIex/Makefile.am
+openexr-2.5.4/PyIlmBase/config/
+openexr-2.5.4/PyIlmBase/config/PyIlmBaseConfig.h.in
+openexr-2.5.4/PyIlmBase/config/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/config/ModuleDefine.cmake
+openexr-2.5.4/PyIlmBase/config/ParseConfigure.cmake
+openexr-2.5.4/PyIlmBase/config/PyIlmBaseConfigInternal.h.in
+openexr-2.5.4/PyIlmBase/config/PyIlmBaseConfigInternal.h.in_cmake
+openexr-2.5.4/PyIlmBase/config/Makefile.am
+openexr-2.5.4/PyIlmBase/config/NumPyLocate.cmake
+openexr-2.5.4/PyIlmBase/config/PyIlmBaseSetup.cmake
+openexr-2.5.4/PyIlmBase/PyImath/
+openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix33.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVecOperators.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathStringTable.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathMathExc.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFun.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathColor3ArrayImpl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3siArray.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathExport.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBoxArrayImpl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathLine.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathLine.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix44.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathAutovectorize.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArray.cpp
+openexr-2.5.4/PyIlmBase/PyImath/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/PyImath/varraySemantics.txt
+openexr-2.5.4/PyIlmBase/PyImath/PyImathOperators.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathTask.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3si.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFrustum.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedMatrix.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathRandom.cpp
+openexr-2.5.4/PyIlmBase/PyImath/imathmodule.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3ArrayImpl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathColor3.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4ArrayImpl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathM44Array.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBasicTypes.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4fd.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBox2Array.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathShear.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArrayRegister.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFun.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathColor4.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2Impl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4siArray.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImath.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3fd.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathStringTable.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray2D.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathPlane.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArray.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathEuler.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathColor4ArrayImpl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathColor.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathShear.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathEuler.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathM44Array.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2si.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImath.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathUtil.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFrustum.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4Impl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBasicTypes.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathUtil.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathPlane.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2fd.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathDecorators.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathColor4Array2DImpl.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4si.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathTask.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathQuat.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3Impl.h
+openexr-2.5.4/PyIlmBase/PyImath/Makefile.am
+openexr-2.5.4/PyIlmBase/PyImath/PyImathAutovectorize.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathQuat.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathBox3Array.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix22.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedVArray.cpp
+openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedVArray.h
+openexr-2.5.4/PyIlmBase/PyImath/PyImathRandom.h
+openexr-2.5.4/PyIlmBase/PyImathTest/
+openexr-2.5.4/PyIlmBase/PyImathTest/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/PyImathTest/pyImathTest.in
+openexr-2.5.4/PyIlmBase/PyImathTest/Makefile.am
+openexr-2.5.4/PyIlmBase/Makefile.am
+openexr-2.5.4/PyIlmBase/PyIlmBase.pc.in
+openexr-2.5.4/PyIlmBase/PyIexTest/
+openexr-2.5.4/PyIlmBase/PyIexTest/pyIexTest.in
+openexr-2.5.4/PyIlmBase/PyIexTest/CMakeLists.txt
+openexr-2.5.4/PyIlmBase/PyIexTest/Makefile.am
+openexr-2.5.4/.gitignore
+-- The C compiler identification is GNU 10.2.0
+-- The CXX compiler identification is GNU 10.2.0
+-- Detecting C compiler ABI info
+-- Detecting C compiler ABI info - done
+-- Check for working C compiler: /usr/bin/cc - skipped
+-- Detecting C compile features
+-- Detecting C compile features - done
+-- Detecting CXX compiler ABI info
+-- Detecting CXX compiler ABI info - done
+-- Check for working CXX compiler: /usr/bin/c++ - skipped
+-- Detecting CXX compile features
+-- Detecting CXX compile features - done
+-- Configure ILMBASE Version: 2.5.4 Lib API: 25.0.3
+-- Setting build type to 'Release' as none was specified.
+-- Looking for pthread.h
+-- Looking for pthread.h - found
+-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
+-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
+-- Found Threads: TRUE  
+-- Looking for include file ucontext.h
+-- Looking for include file ucontext.h - found
+-- Performing Test ILMBASE_HAVE_CONTROL_REGISTER_SUPPORT
+-- Performing Test ILMBASE_HAVE_CONTROL_REGISTER_SUPPORT - Failed
+-- Looking for include file asm/sigcontext.h
+-- Looking for include file asm/sigcontext.h - found
+-- Performing Test ILMBASE_HAVE_SIGCONTEXT_CONTROL_REGISTER_SUPPORT
+-- Performing Test ILMBASE_HAVE_SIGCONTEXT_CONTROL_REGISTER_SUPPORT - Success
+-- Looking for include file semaphore.h
+-- Looking for include file semaphore.h - found
+-- Looking for sem_init in pthread
+-- Looking for sem_init in pthread - found
+-- Configure OpenEXR Version: 2.5.4 Lib API: 25.0.3
+-- Found ZLIB: /usr/lib/libz.so (found version "1.2.11") 
+-- Performing Test OPENEXR_IMF_HAVE_SYSCONF_NPROCESSORS_ONLN
+-- Performing Test OPENEXR_IMF_HAVE_SYSCONF_NPROCESSORS_ONLN - Success
+-- Performing Test OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX
+-- Performing Test OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX - Success
+-- Configure PyIlmBase Version: 2.5.4 Lib API: 25.0.3
+-- Found Python: /usr/bin/python3.9 (found version "3.9.1") found components: Interpreter Development Development.Module Development.Embed 
+-- Found Python2: /usr/bin/python2.7 (found version "2.7.18") found components: Interpreter Development Development.Module Development.Embed 
+-- Found Python3: /usr/bin/python3.9 (found version "3.9.1") found components: Interpreter Development Development.Module Development.Embed 
+-- : Found Python 2.7.18
+-- : Found Python 3.9.1
+-- Found Python2 libraries: 27
+--   -> Will install to: lib/python2.7/site-packages
+-- Found Python3 libraries: 39
+--   -> Will install to: lib/python3.9/site-packages
+-- Disabling boost-provided cmake config. If this causes problems, consider setting Boost_NO_BOOST_CMAKE variable to OFF
+CMake Warning at /usr/share/cmake-3.19/Modules/FindBoost.cmake:1204 (message):
+  New Boost version may have incorrect or missing dependencies and imported
+  targets
+Call Stack (most recent call first):
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1326 (_Boost_COMPONENT_DEPENDENCIES)
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1935 (_Boost_MISSING_DEPENDENCIES)
+  PyIlmBase/CMakeLists.txt:143 (find_package)
+
+
+CMake Warning at /usr/share/cmake-3.19/Modules/FindBoost.cmake:1204 (message):
+  New Boost version may have incorrect or missing dependencies and imported
+  targets
+Call Stack (most recent call first):
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1326 (_Boost_COMPONENT_DEPENDENCIES)
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1935 (_Boost_MISSING_DEPENDENCIES)
+  PyIlmBase/CMakeLists.txt:143 (find_package)
+
+
+CMake Warning at /usr/share/cmake-3.19/Modules/FindBoost.cmake:1204 (message):
+  New Boost version may have incorrect or missing dependencies and imported
+  targets
+Call Stack (most recent call first):
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1326 (_Boost_COMPONENT_DEPENDENCIES)
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1935 (_Boost_MISSING_DEPENDENCIES)
+  PyIlmBase/CMakeLists.txt:143 (find_package)
+
+
+CMake Warning at /usr/share/cmake-3.19/Modules/FindBoost.cmake:1204 (message):
+  New Boost version may have incorrect or missing dependencies and imported
+  targets
+Call Stack (most recent call first):
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1326 (_Boost_COMPONENT_DEPENDENCIES)
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1935 (_Boost_MISSING_DEPENDENCIES)
+  PyIlmBase/CMakeLists.txt:143 (find_package)
+
+
+CMake Warning at /usr/share/cmake-3.19/Modules/FindBoost.cmake:1204 (message):
+  New Boost version may have incorrect or missing dependencies and imported
+  targets
+Call Stack (most recent call first):
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1326 (_Boost_COMPONENT_DEPENDENCIES)
+  /usr/share/cmake-3.19/Modules/FindBoost.cmake:1935 (_Boost_MISSING_DEPENDENCIES)
+  PyIlmBase/CMakeLists.txt:143 (find_package)
+
+
+-- Found Boost: /usr/include (found version "1.75.0") found components: python27 python39 missing components: python python2 python3
+--  -> Found Python 2 boost: Boost::python27
+--  -> Found Python 3 boost: Boost::python39
+CMake Warning at PyIlmBase/config/NumPyLocate.cmake:14 (message):
+  Unable to import numpy using python 2.7.18
+Call Stack (most recent call first):
+  PyIlmBase/CMakeLists.txt:208 (include)
+
+
+CMake Warning at PyIlmBase/config/NumPyLocate.cmake:56 (message):
+  Unable to import numpy using python 3.9.1
+Call Stack (most recent call first):
+  PyIlmBase/CMakeLists.txt:208 (include)
+
+
+-- clang-format found: /usr/bin/clang-format
+-- Configuring done
+-- Generating done
+CMake Warning:
+  Manually-specified variables were not used by the project:
+
+    DOC_INSTALL_DIR
+    LIB_SUFFIX
+    MAN_INSTALL_DIR
+
+
+-- Build files have been written to: /tmp/openexr-2.5.4/cmake-build
+Scanning dependencies of target Half
+Scanning dependencies of target Iex
+[  0%] Building CXX object IlmBase/Iex/CMakeFiles/Iex.dir/IexBaseExc.cpp.o
+[  0%] Building CXX object IlmBase/Iex/CMakeFiles/Iex.dir/IexThrowErrnoExc.cpp.o
+[  0%] Building CXX object IlmBase/Half/CMakeFiles/Half.dir/half.cpp.o
+[  0%] Linking CXX shared library libHalf-2_5.so
+[  0%] Built target Half
+Scanning dependencies of target HalfTest
+[  0%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/main.cpp.o
+[  1%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testArithmetic.cpp.o
+[  1%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testBitPatterns.cpp.o
+[  1%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testClassification.cpp.o
+[  1%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testError.cpp.o
+[  2%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testFunction.cpp.o
+[  2%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testLimits.cpp.o
+[  2%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testSize.cpp.o
+[  3%] Building CXX object IlmBase/HalfTest/CMakeFiles/HalfTest.dir/testToFloat.cpp.o
+[  4%] Linking CXX shared library libIex-2_5.so
+[  4%] Built target Iex
+Scanning dependencies of target IlmThread
+Scanning dependencies of target IexMath
+[  4%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThread.cpp.o
+[  4%] Building CXX object IlmBase/IexMath/CMakeFiles/IexMath.dir/IexMathFloatExc.cpp.o
+[  4%] Linking CXX executable ../../bin/HalfTest
+[  4%] Built target HalfTest
+[  4%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadMutex.cpp.o
+[  5%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadMutexPosix.cpp.o
+[  5%] Building CXX object IlmBase/IexMath/CMakeFiles/IexMath.dir/IexMathFpu.cpp.o
+[  5%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadPool.cpp.o
+[  5%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadPosix.cpp.o
+[  5%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadSemaphore.cpp.o
+[  6%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadSemaphorePosixCompat.cpp.o
+[  7%] Linking CXX shared library libIexMath-2_5.so
+[  7%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadSemaphorePosix.cpp.o
+[  7%] Built target IexMath
+Scanning dependencies of target IexTest
+[  7%] Building CXX object IlmBase/IexTest/CMakeFiles/IexTest.dir/main.cpp.o
+[  7%] Building CXX object IlmBase/IexTest/CMakeFiles/IexTest.dir/testBaseExc.cpp.o
+[  7%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadSemaphoreOSX.cpp.o
+[  8%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadMutexWin32.cpp.o
+[  8%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadSemaphoreWin32.cpp.o
+[  8%] Building CXX object IlmBase/IlmThread/CMakeFiles/IlmThread.dir/IlmThreadWin32.cpp.o
+Scanning dependencies of target PyIex_Python3_9
+[  8%] Linking CXX shared library libIlmThread-2_5.so
+[  8%] Building CXX object PyIlmBase/PyIex/CMakeFiles/PyIex_Python3_9.dir/PyIex.cpp.o
+[  8%] Built target IlmThread
+Scanning dependencies of target PyIex_Python2_7
+[  8%] Building CXX object PyIlmBase/PyIex/CMakeFiles/PyIex_Python2_7.dir/PyIex.cpp.o
+[  8%] Linking CXX executable ../../bin/IexTest
+[  8%] Built target IexTest
+Scanning dependencies of target Imath
+[  9%] Building CXX object IlmBase/Imath/CMakeFiles/Imath.dir/ImathRandom.cpp.o
+[  9%] Building CXX object IlmBase/Imath/CMakeFiles/Imath.dir/ImathColorAlgo.cpp.o
+[  9%] Building CXX object IlmBase/Imath/CMakeFiles/Imath.dir/ImathFun.cpp.o
+[ 10%] Building CXX object IlmBase/Imath/CMakeFiles/Imath.dir/ImathVec.cpp.o
+[ 10%] Building CXX object IlmBase/Imath/CMakeFiles/Imath.dir/ImathExc.cpp.o
+[ 10%] Building CXX object IlmBase/Imath/CMakeFiles/Imath.dir/ImathMatrixAlgo.cpp.o
+[ 10%] Linking CXX shared library libImath-2_5.so
+[ 10%] Built target Imath
+Scanning dependencies of target ImathTest
+[ 11%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/main.cpp.o
+[ 11%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testBox.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyIex/PyIex.h:46,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyIex/PyIex.cpp:42:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyIex/PyIex.h:46,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyIex/PyIex.cpp:42:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 12%] Linking CXX shared library libPyIex_Python2_7-2_5.so
+[ 12%] Linking CXX shared library libPyIex_Python3_9-2_5.so
+[ 12%] Built target PyIex_Python2_7
+[ 12%] Built target PyIex_Python3_9
+Scanning dependencies of target iex_python2
+Scanning dependencies of target IlmImf
+[ 12%] Building CXX object PyIlmBase/PyIex/CMakeFiles/iex_python2.dir/iexmodule.cpp.o
+[ 12%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testBoxAlgo.cpp.o
+[ 13%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfAttribute.cpp.o
+[ 13%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfBoxAttribute.cpp.o
+[ 13%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfCRgbaFile.cpp.o
+[ 14%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testColor.cpp.o
+[ 14%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testExtractEuler.cpp.o
+[ 15%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfChannelList.cpp.o
+[ 15%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testExtractSHRT.cpp.o
+[ 15%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfChannelListAttribute.cpp.o
+[ 15%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfFloatAttribute.cpp.o
+[ 15%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testFrustum.cpp.o
+[ 15%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfFrameBuffer.cpp.o
+[ 16%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testFrustumTest.cpp.o
+[ 17%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfHeader.cpp.o
+[ 17%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testFun.cpp.o
+[ 17%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testInvert.cpp.o
+[ 18%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testJacobiEigenSolver.cpp.o
+[ 18%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfIO.cpp.o
+[ 18%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfInputFile.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyIex/iexmodule.cpp:36:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 18%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testLineAlgo.cpp.o
+[ 19%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfIntAttribute.cpp.o
+[ 19%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfLineOrderAttribute.cpp.o
+[ 19%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testMatrix.cpp.o
+[ 19%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfMatrixAttribute.cpp.o
+[ 19%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfOpaqueAttribute.cpp.o
+[ 19%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testMiscMatrixAlgo.cpp.o
+[ 20%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfOutputFile.cpp.o
+[ 21%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testProcrustes.cpp.o
+[ 21%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfRgbaFile.cpp.o
+[ 21%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testQuat.cpp.o
+[ 21%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfStringAttribute.cpp.o
+[ 22%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfVecAttribute.cpp.o
+[ 22%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testQuatSetRotation.cpp.o
+[ 22%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfHuf.cpp.o
+[ 22%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testQuatSlerp.cpp.o
+[ 22%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfThreading.cpp.o
+[ 22%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfWav.cpp.o
+[ 23%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfLut.cpp.o
+[ 24%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testRandom.cpp.o
+[ 24%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfCompressor.cpp.o
+[ 24%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testRoots.cpp.o
+[ 24%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfRleCompressor.cpp.o
+[ 24%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testShear.cpp.o
+[ 25%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfZipCompressor.cpp.o
+[ 26%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testTinySVD.cpp.o
+[ 26%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfPizCompressor.cpp.o
+[ 26%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfB44Compressor.cpp.o
+[ 26%] Building CXX object IlmBase/ImathTest/CMakeFiles/ImathTest.dir/testVec.cpp.o
+[ 26%] Linking CXX executable ../../bin/ImathTest
+[ 26%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDwaCompressor.cpp.o
+[ 26%] Built target ImathTest
+Scanning dependencies of target iex_python3
+[ 26%] Building CXX object PyIlmBase/PyIex/CMakeFiles/iex_python3.dir/iexmodule.cpp.o
+[ 27%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfMisc.cpp.o
+[ 27%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfCompressionAttribute.cpp.o
+[ 27%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDoubleAttribute.cpp.o
+[ 28%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfConvert.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyIex/iexmodule.cpp:36:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 28%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfPreviewImage.cpp.o
+[ 28%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfPreviewImageAttribute.cpp.o
+[ 28%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfVersion.cpp.o
+[ 29%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfChromaticities.cpp.o
+[ 29%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfChromaticitiesAttribute.cpp.o
+[ 30%] Linking CXX shared module ../../python2_7/iex.so
+[ 30%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfKeyCode.cpp.o
+[ 30%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfKeyCodeAttribute.cpp.o
+[ 30%] Built target iex_python2
+[ 31%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTimeCode.cpp.o
+[ 31%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTimeCodeAttribute.cpp.o
+[ 31%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfRational.cpp.o
+[ 32%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfRationalAttribute.cpp.o
+[ 32%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfFramesPerSecond.cpp.o
+[ 32%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfStandardAttributes.cpp.o
+[ 32%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfStdIO.cpp.o
+[ 33%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfEnvmap.cpp.o
+[ 33%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfEnvmapAttribute.cpp.o
+[ 33%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfScanLineInputFile.cpp.o
+[ 34%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTiledInputFile.cpp.o
+[ 34%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTiledMisc.cpp.o
+[ 34%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTiledOutputFile.cpp.o
+[ 34%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTiledRgbaFile.cpp.o
+[ 35%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTileDescriptionAttribute.cpp.o
+[ 35%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTileOffsets.cpp.o
+[ 35%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfRgbaYca.cpp.o
+[ 36%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfPxr24Compressor.cpp.o
+[ 36%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTestFile.cpp.o
+[ 36%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfStringVectorAttribute.cpp.o
+[ 36%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfMultiView.cpp.o
+[ 37%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfAcesFile.cpp.o
+[ 37%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfMultiPartOutputFile.cpp.o
+[ 37%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfGenericOutputFile.cpp.o
+[ 38%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfOutputPartData.cpp.o
+[ 38%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfMultiPartInputFile.cpp.o
+[ 38%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfGenericInputFile.cpp.o
+[ 38%] Linking CXX shared module ../../python3_9/iex.so
+[ 38%] Built target iex_python3
+Scanning dependencies of target PyImath_Python3_9
+[ 38%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfPartType.cpp.o
+[ 39%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfInputPartData.cpp.o
+[ 40%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImath.cpp.o
+[ 40%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfOutputPart.cpp.o
+[ 40%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTiledOutputPart.cpp.o
+[ 41%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfInputPart.cpp.o
+[ 41%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfTiledInputPart.cpp.o
+[ 41%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepScanLineInputPart.cpp.o
+[ 41%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepScanLineOutputPart.cpp.o
+[ 41%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathAutovectorize.cpp.o
+[ 42%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepScanLineInputFile.cpp.o
+[ 42%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepScanLineOutputFile.cpp.o
+[ 42%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepTiledInputPart.cpp.o
+[ 43%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepTiledOutputPart.cpp.o
+[ 43%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepTiledInputFile.cpp.o
+[ 43%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepTiledOutputFile.cpp.o
+[ 43%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepFrameBuffer.cpp.o
+[ 44%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepCompositing.cpp.o
+[ 44%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfCompositeDeepScanLine.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathAutovectorize.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathAutovectorize.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 44%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathBox2Array.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImath.h:40,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImath.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 44%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfDeepImageStateAttribute.cpp.o
+[ 45%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathBox3Array.cpp.o
+[ 46%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfFastHuf.cpp.o
+[ 46%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfFloatVectorAttribute.cpp.o
+[ 46%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfRle.cpp.o
+[ 46%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfSystemSpecific.cpp.o
+[ 47%] Building CXX object OpenEXR/IlmImf/CMakeFiles/IlmImf.dir/ImfZip.cpp.o
+[ 47%] Linking CXX shared library libIlmImf-2_5.so
+[ 47%] Built target IlmImf
+Scanning dependencies of target PyImath_Python2_7
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImath.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBoxArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox2Array.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBoxArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox3Array.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImath.h:40,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImath.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathAutovectorize.cpp.o
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathBox.cpp.o
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathColor3.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathAutovectorize.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathAutovectorize.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor3.cpp:43:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathBox2Array.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBoxArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox2Array.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathColor4.cpp.o
+[ 48%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathBox3Array.cpp.o
+[ 49%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathEuler.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBoxArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox3Array.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor4.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathEuler.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathEuler.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 50%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathBox.cpp.o
+[ 50%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathFixedArray.cpp.o
+[ 50%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathFrustum.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBox.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 51%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathLine.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFrustum.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFrustum.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathLine.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathLine.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 51%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathMatrix22.cpp.o
+[ 51%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathMatrix33.cpp.o
+[ 51%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathColor3.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix22.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor3.cpp:43:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix33.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 51%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathMatrix44.cpp.o
+[ 51%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathColor4.cpp.o
+[ 52%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathEuler.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathEuler.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathEuler.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathColor4.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix44.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 52%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathFixedArray.cpp.o
+[ 52%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathFrustum.cpp.o
+[ 53%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathPlane.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 53%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathLine.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFrustum.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFrustum.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathPlane.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathPlane.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 54%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathMatrix22.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathLine.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathLine.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 54%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathQuat.cpp.o
+[ 54%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathMatrix33.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathQuat.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathQuat.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix22.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix33.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 54%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathMatrix44.cpp.o
+[ 54%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathRandom.cpp.o
+[ 55%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathPlane.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathRandom.h:40,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathRandom.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathMatrix44.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 55%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathShear.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathPlane.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathPlane.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathShear.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathShear.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 55%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathQuat.cpp.o
+[ 55%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathRandom.cpp.o
+[ 56%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathStringArray.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathQuat.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathQuat.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathRandom.h:40,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathRandom.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArray.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 56%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathShear.cpp.o
+[ 56%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathStringTable.cpp.o
+[ 56%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathTask.cpp.o
+[ 57%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathUtil.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathShear.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathShear.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 58%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathStringArray.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathUtil.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 58%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathFixedVArray.cpp.o
+[ 58%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathStringTable.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathStringArray.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 58%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathTask.cpp.o
+[ 59%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathUtil.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedVArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedVArray.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 59%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathFixedVArray.cpp.o
+[ 59%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec2fd.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathUtil.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 59%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec2fd.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedVArray.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFixedVArray.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 59%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec2si.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2fd.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2fd.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2si.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 59%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec2si.cpp.o
+[ 60%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec3fd.cpp.o
+[ 60%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec3siArray.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3fd.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3ArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3siArray.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec2si.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 61%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec3fd.cpp.o
+[ 61%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec3si.cpp.o
+[ 62%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec4fd.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3si.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4fd.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3fd.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 62%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec4siArray.cpp.o
+[ 62%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python2_7.dir/PyImathVec4si.cpp.o
+[ 62%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec3siArray.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4ArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4siArray.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4si.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3ArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3siArray.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 62%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec3si.cpp.o
+[ 62%] Linking CXX shared library libPyImath_Python2_7-2_5.so
+[ 63%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec4fd.cpp.o
+[ 63%] Built target PyImath_Python2_7
+Scanning dependencies of target IlmImfUtil
+[ 63%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfImageChannel.cpp.o
+[ 64%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfFlatImageChannel.cpp.o
+[ 64%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfDeepImageChannel.cpp.o
+[ 64%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfSampleCountChannel.cpp.o
+[ 64%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfImageLevel.cpp.o
+[ 65%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfFlatImageLevel.cpp.o
+[ 65%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfDeepImageLevel.cpp.o
+[ 65%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfImage.cpp.o
+[ 66%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfFlatImage.cpp.o
+[ 66%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfDeepImage.cpp.o
+[ 66%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfImageIO.cpp.o
+[ 66%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfFlatImageIO.cpp.o
+[ 67%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfDeepImageIO.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4fd.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec3si.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 67%] Building CXX object OpenEXR/IlmImfUtil/CMakeFiles/IlmImfUtil.dir/ImfImageDataWindow.cpp.o
+[ 67%] Linking CXX shared library libIlmImfUtil-2_5.so
+[ 67%] Built target IlmImfUtil
+Scanning dependencies of target IlmImfExamples
+[ 67%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/drawImage.cpp.o
+[ 68%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/generalInterfaceExamples.cpp.o
+[ 68%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/generalInterfaceTiledExamples.cpp.o
+[ 68%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/lowLevelIoExamples.cpp.o
+[ 68%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/main.cpp.o
+[ 69%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/previewImageExamples.cpp.o
+[ 69%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/rgbaInterfaceExamples.cpp.o
+[ 69%] Building CXX object OpenEXR/IlmImfExamples/CMakeFiles/IlmImfExamples.dir/rgbaInterfaceTiledExamples.cpp.o
+[ 69%] Linking CXX executable IlmImfExamples
+[ 69%] Built target IlmImfExamples
+Scanning dependencies of target IlmImfTest
+[ 70%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/compareB44.cpp.o
+[ 70%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/compareDwa.cpp.o
+[ 70%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/compareFloat.cpp.o
+[ 71%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/main.cpp.o
+[ 71%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testAttributes.cpp.o
+[ 71%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testBackwardCompatibility.cpp.o
+[ 71%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testBadTypeAttributes.cpp.o
+[ 72%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testChannels.cpp.o
+[ 72%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCompositeDeepScanLine.cpp.o
+[ 72%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec4siArray.cpp.o
+[ 72%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCompression.cpp.o
+[ 73%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testConversion.cpp.o
+[ 73%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCopyDeepScanLine.cpp.o
+[ 73%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCopyDeepTiled.cpp.o
+[ 73%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCopyMultiPartFile.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4ArrayImpl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4siArray.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 73%] Building CXX object PyIlmBase/PyImath/CMakeFiles/PyImath_Python3_9.dir/PyImathVec4si.cpp.o
+[ 74%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCopyPixels.cpp.o
+[ 74%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testCustomAttributes.cpp.o
+[ 74%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testDeepScanLineBasic.cpp.o
+[ 75%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testDeepScanLineHuge.cpp.o
+[ 75%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testDeepScanLineMultipleRead.cpp.o
+[ 75%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testDeepTiledBasic.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec.h:39,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4Impl.h:44,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathVec4si.cpp:37:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 75%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testDwaCompressorSimd.cpp.o
+[ 76%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testExistingStreams.cpp.o
+[ 76%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testFutureProofing.cpp.o
+[ 76%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testHuf.cpp.o
+[ 77%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testInputPart.cpp.o
+[ 77%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testIsComplete.cpp.o
+[ 77%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testLineOrder.cpp.o
+[ 77%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testLut.cpp.o
+[ 78%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMagic.cpp.o
+[ 78%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMalformedImages.cpp.o
+[ 78%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiPartApi.cpp.o
+[ 79%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiPartFileMixingBasic.cpp.o
+[ 79%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiPartSharedAttributes.cpp.o
+[ 79%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiPartThreading.cpp.o
+[ 79%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiScanlinePartThreading.cpp.o
+[ 79%] Linking CXX shared library libPyImath_Python3_9-2_5.so
+[ 80%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiTiledPartThreading.cpp.o
+[ 80%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testMultiView.cpp.o
+[ 80%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testNativeFormat.cpp.o
+[ 80%] Built target PyImath_Python3_9
+Scanning dependencies of target IlmImfUtilTest
+[ 81%] Building CXX object OpenEXR/IlmImfUtilTest/CMakeFiles/IlmImfUtilTest.dir/main.cpp.o
+[ 82%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testOptimized.cpp.o
+[ 82%] Building CXX object OpenEXR/IlmImfUtilTest/CMakeFiles/IlmImfUtilTest.dir/testFlatImage.cpp.o
+[ 82%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testOptimizedInterleavePatterns.cpp.o
+[ 82%] Building CXX object OpenEXR/IlmImfUtilTest/CMakeFiles/IlmImfUtilTest.dir/testDeepImage.cpp.o
+[ 82%] Building CXX object OpenEXR/IlmImfUtilTest/CMakeFiles/IlmImfUtilTest.dir/testIO.cpp.o
+[ 82%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testPartHelper.cpp.o
+Scanning dependencies of target exr2aces
+[ 83%] Building CXX object OpenEXR/exr2aces/CMakeFiles/exr2aces.dir/main.cpp.o
+[ 84%] Linking CXX executable ../../bin/IlmImfUtilTest
+[ 84%] Built target IlmImfUtilTest
+Scanning dependencies of target exrheader
+[ 85%] Building CXX object OpenEXR/exrheader/CMakeFiles/exrheader.dir/main.cpp.o
+[ 85%] Linking CXX executable ../../bin/exr2aces
+[ 85%] Built target exr2aces
+Scanning dependencies of target exrmaketiled
+[ 85%] Building CXX object OpenEXR/exrmaketiled/CMakeFiles/exrmaketiled.dir/makeTiled.cpp.o
+[ 85%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testPreviewImage.cpp.o
+[ 85%] Linking CXX executable ../../bin/exrheader
+[ 85%] Built target exrheader
+Scanning dependencies of target exrstdattr
+[ 85%] Building CXX object OpenEXR/exrstdattr/CMakeFiles/exrstdattr.dir/main.cpp.o
+[ 86%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testRgba.cpp.o
+[ 86%] Building CXX object OpenEXR/exrmaketiled/CMakeFiles/exrmaketiled.dir/main.cpp.o
+[ 86%] Linking CXX executable ../../bin/exrstdattr
+[ 86%] Built target exrstdattr
+Scanning dependencies of target exrmakepreview
+[ 86%] Building CXX object OpenEXR/exrmakepreview/CMakeFiles/exrmakepreview.dir/main.cpp.o
+[ 87%] Building CXX object OpenEXR/exrmaketiled/CMakeFiles/exrmaketiled.dir/Image.cpp.o
+[ 87%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testRgbaThreading.cpp.o
+[ 87%] Building CXX object OpenEXR/exrmakepreview/CMakeFiles/exrmakepreview.dir/makePreview.cpp.o
+[ 87%] Linking CXX executable ../../bin/exrmaketiled
+[ 87%] Built target exrmaketiled
+Scanning dependencies of target exrenvmap
+[ 88%] Linking CXX executable ../../bin/exrmakepreview
+[ 88%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/makeLatLongMap.cpp.o
+[ 88%] Built target exrmakepreview
+[ 89%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/readInputImage.cpp.o
+[ 89%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testRle.cpp.o
+[ 90%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testSampleImages.cpp.o
+[ 90%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/resizeImage.cpp.o
+[ 90%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/makeCubeMap.cpp.o
+[ 90%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/main.cpp.o
+[ 90%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testScanLineApi.cpp.o
+[ 91%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/blurImage.cpp.o
+[ 91%] Building CXX object OpenEXR/exrenvmap/CMakeFiles/exrenvmap.dir/EnvmapImage.cpp.o
+[ 91%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testSharedFrameBuffer.cpp.o
+[ 91%] Linking CXX executable ../../bin/exrenvmap
+[ 91%] Built target exrenvmap
+Scanning dependencies of target exrmultiview
+[ 92%] Building CXX object OpenEXR/exrmultiview/CMakeFiles/exrmultiview.dir/makeMultiView.cpp.o
+[ 92%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testStandardAttributes.cpp.o
+[ 92%] Building CXX object OpenEXR/exrmultiview/CMakeFiles/exrmultiview.dir/main.cpp.o
+[ 93%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testTiledCompression.cpp.o
+[ 93%] Building CXX object OpenEXR/exrmultiview/CMakeFiles/exrmultiview.dir/Image.cpp.o
+[ 93%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testTiledCopyPixels.cpp.o
+[ 93%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testTiledLineOrder.cpp.o
+[ 94%] Linking CXX executable ../../bin/exrmultiview
+[ 94%] Built target exrmultiview
+Scanning dependencies of target exrmultipart
+[ 94%] Building CXX object OpenEXR/exrmultipart/CMakeFiles/exrmultipart.dir/exrmultipart.cpp.o
+[ 95%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testTiledRgba.cpp.o
+[ 95%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testTiledYa.cpp.o
+[ 95%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testWav.cpp.o
+[ 95%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testXdr.cpp.o
+[ 96%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testYca.cpp.o
+[ 96%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testLargeDataWindowOffsets.cpp.o
+[ 96%] Linking CXX executable ../../bin/exrmultipart
+[ 96%] Built target exrmultipart
+Scanning dependencies of target imath_python3
+[ 97%] Building CXX object PyIlmBase/PyImath/CMakeFiles/imath_python3.dir/imathmodule.cpp.o
+[ 97%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testB44ExpLogTable.cpp.o
+[ 97%] Building CXX object PyIlmBase/PyImath/CMakeFiles/imath_python3.dir/PyImathFun.cpp.o
+[ 97%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/testDwaLookups.cpp.o
+[ 98%] Building CXX object OpenEXR/IlmImfTest/CMakeFiles/IlmImfTest.dir/random.cpp.o
+[ 98%] Linking CXX executable ../../bin/IlmImfTest
+[ 98%] Built target IlmImfTest
+Scanning dependencies of target imath_python2
+[ 99%] Building CXX object PyIlmBase/PyImath/CMakeFiles/imath_python2.dir/imathmodule.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/imathmodule.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathDecorators.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFun.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/imathmodule.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[ 99%] Building CXX object PyIlmBase/PyImath/CMakeFiles/imath_python2.dir/PyImathFun.cpp.o
+[ 99%] Building CXX object PyIlmBase/PyImath/CMakeFiles/imath_python3.dir/PyImathBasicTypes.cpp.o
+[ 99%] Building CXX object PyIlmBase/PyImath/CMakeFiles/imath_python2.dir/PyImathBasicTypes.cpp.o
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBasicTypes.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathBasicTypes.cpp:39:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+In file included from /usr/include/boost/smart_ptr/detail/sp_thread_sleep.hpp:22,
+                 from /usr/include/boost/smart_ptr/detail/yield_k.hpp:23,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_gcc_atomic.hpp:14,
+                 from /usr/include/boost/smart_ptr/detail/spinlock.hpp:42,
+                 from /usr/include/boost/smart_ptr/detail/spinlock_pool.hpp:25,
+                 from /usr/include/boost/smart_ptr/shared_ptr.hpp:29,
+                 from /usr/include/boost/shared_ptr.hpp:17,
+                 from /usr/include/boost/python/converter/shared_ptr_to_python.hpp:12,
+                 from /usr/include/boost/python/converter/arg_to_python.hpp:15,
+                 from /usr/include/boost/python/call.hpp:15,
+                 from /usr/include/boost/python/object_core.hpp:14,
+                 from /usr/include/boost/python/args.hpp:22,
+                 from /usr/include/boost/python.hpp:11,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathDecorators.h:38,
+                 from /tmp/openexr-2.5.4/PyIlmBase/PyImath/PyImathFun.cpp:38:
+/usr/include/boost/bind.hpp:36:1: note: ‘#pragma message: The practice of declaring the Bind placeholders (_1, _2, ...) in the global namespace is deprecated. Please use <boost/bind/bind.hpp> + using namespace boost::placeholders, or define BOOST_BIND_GLOBAL_PLACEHOLDERS to retain the current behavior.’
+   36 | BOOST_PRAGMA_MESSAGE(
+      | ^~~~~~~~~~~~~~~~~~~~
+[100%] Linking CXX shared module ../../python2_7/imath.so
+[100%] Linking CXX shared module ../../python3_9/imath.so
+[100%] Built target imath_python2
+[100%] Built target imath_python3
+[  0%] Built target Half
+[  1%] Built target Iex
+[  2%] Built target IexMath
+[  4%] Built target Imath
+[  7%] Built target IlmThread
+[ 10%] Built target HalfTest
+[ 10%] Built target IexTest
+[ 17%] Built target ImathTest
+[ 43%] Built target IlmImf
+[ 47%] Built target IlmImfUtil
+[ 49%] Built target IlmImfExamples
+[ 67%] Built target IlmImfTest
+[ 69%] Built target IlmImfUtilTest
+[ 70%] Built target exr2aces
+[ 71%] Built target exrheader
+[ 72%] Built target exrmaketiled
+[ 72%] Built target exrstdattr
+[ 73%] Built target exrmakepreview
+[ 75%] Built target exrenvmap
+[ 77%] Built target exrmultiview
+[ 77%] Built target exrmultipart
+[ 77%] Built target PyIex_Python3_9
+[ 78%] Built target PyIex_Python2_7
+[ 79%] Built target iex_python2
+[ 79%] Built target iex_python3
+[ 88%] Built target PyImath_Python3_9
+[ 90%] Built target imath_python3
+[ 99%] Built target PyImath_Python2_7
+[100%] Built target imath_python2
+Install the project...
+-- Install configuration: "Release"
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmBaseConfig.h
+-- Installing: /tmp/package-openexr/usr/lib/pkgconfig/IlmBase.pc
+-- Installing: /tmp/package-openexr/usr/lib/cmake/IlmBase/IlmBaseConfig.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/IlmBase/IlmBaseConfigVersion.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/IlmBase/IlmBaseTargets.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/IlmBase/IlmBaseTargets-release.cmake
+-- Installing: /tmp/package-openexr/usr/lib/libHalf-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libHalf-2_5.so.25
+-- Installing: /tmp/package-openexr/usr/lib/libHalf-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/half.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/halfFunction.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/halfExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/halfLimits.h
+-- Creating symlink in /usr/lib libHalf.so -> libHalf-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/libIex-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libIex-2_5.so.25
+-- Installing: /tmp/package-openexr/usr/lib/libIex-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexBaseExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexMathExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexThrowErrnoExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexErrnoExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexMacros.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/Iex.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexNamespace.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexForward.h
+-- Creating symlink in /usr/lib libIex.so -> libIex-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/libIexMath-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libIexMath-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libIexMath-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libIexMath-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexMathFloatExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexMathFpu.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IexMathIeeeExc.h
+-- Creating symlink in /usr/lib libIexMath.so -> libIexMath-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/libImath-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libImath-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libImath-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libImath-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathBoxAlgo.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathBox.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathColorAlgo.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathColor.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathEuler.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathForward.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathFrame.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathFrustum.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathFrustumTest.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathFun.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathGL.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathGLU.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathHalfLimits.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathInt64.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathInterval.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathLimits.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathLineAlgo.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathLine.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathMath.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathMatrixAlgo.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathMatrix.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathNamespace.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathPlane.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathPlatform.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathQuat.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathRandom.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathRoots.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathShear.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathSphere.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathVecAlgo.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImathVec.h
+-- Creating symlink in /usr/lib libImath.so -> libImath-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/libIlmThread-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libIlmThread-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libIlmThread-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libIlmThread-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThreadPool.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThread.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThreadSemaphore.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThreadMutex.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThreadNamespace.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThreadExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/IlmThreadForward.h
+-- Creating symlink in /usr/lib libIlmThread.so -> libIlmThread-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/OpenEXRConfig.h
+-- Installing: /tmp/package-openexr/usr/lib/pkgconfig/OpenEXR.pc
+-- Installing: /tmp/package-openexr/usr/lib/cmake/OpenEXR/OpenEXRConfig.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/OpenEXR/OpenEXRConfigVersion.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/OpenEXR/OpenEXRTargets.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/OpenEXR/OpenEXRTargets-release.cmake
+-- Installing: /tmp/package-openexr/usr/lib/libIlmImf-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libIlmImf-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libIlmImf-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libIlmImf-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfForward.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfBoxAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfCRgbaFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfChannelList.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfChannelListAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfCompressionAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDoubleAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFloatAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFrameBuffer.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfHeader.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfIO.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfInputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfIntAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfLineOrderAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfMatrixAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfOpaqueAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfOutputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfRgbaFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfStringAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfVecAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfHuf.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfWav.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfLut.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfArray.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfCompression.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfLineOrder.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfName.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfPixelType.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfVersion.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfXdr.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfConvert.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfPreviewImage.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfPreviewImageAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfChromaticities.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfChromaticitiesAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfKeyCode.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfKeyCodeAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTimeCode.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTimeCodeAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfRational.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfRationalAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFramesPerSecond.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfStandardAttributes.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfStdIO.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfEnvmap.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfEnvmapAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfInt64.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfRgba.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTileDescription.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTileDescriptionAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTiledInputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTiledOutputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTiledRgbaFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfRgbaYca.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTestFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfThreading.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfB44Compressor.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfStringVectorAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfMultiView.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfAcesFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfMultiPartOutputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfGenericOutputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfMultiPartInputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfGenericInputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfPartType.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfPartHelper.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfOutputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTiledOutputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfInputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfTiledInputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepScanLineOutputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepScanLineOutputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepScanLineInputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepScanLineInputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepTiledInputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepTiledInputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepTiledOutputFile.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepTiledOutputPart.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepFrameBuffer.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepCompositing.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfCompositeDeepScanLine.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfNamespace.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepImageState.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepImageStateAttribute.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFloatVectorAttribute.h
+-- Creating symlink in  libIlmImf.so -> libIlmImf-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/libIlmImfUtil-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libIlmImfUtil-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libIlmImfUtil-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libIlmImfUtil-2_5.so
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfImageChannel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFlatImageChannel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepImageChannel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfSampleCountChannel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfImageLevel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFlatImageLevel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepImageLevel.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfImage.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFlatImage.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepImage.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfImageIO.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfFlatImageIO.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfDeepImageIO.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfImageDataWindow.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfImageChannelRenaming.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/ImfUtilExport.h
+-- Creating symlink in  libIlmImfUtil.so -> libIlmImfUtil-2_5.so
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/main.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/drawImage.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/rgbaInterfaceExamples.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/rgbaInterfaceTiledExamples.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/generalInterfaceExamples.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/lowLevelIoExamples.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/previewImageExamples.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/generalInterfaceTiledExamples.cpp
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/generalInterfaceTiledExamples.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/drawImage.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/rgbaInterfaceExamples.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/generalInterfaceExamples.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/rgbaInterfaceTiledExamples.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/lowLevelIoExamples.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/previewImageExamples.h
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/examples/namespaceAlias.h
+-- Installing: /tmp/package-openexr/usr/bin/exr2aces
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exr2aces" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrheader
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrheader" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrmaketiled
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrmaketiled" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrstdattr
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrstdattr" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrmakepreview
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrmakepreview" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrenvmap
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrenvmap" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrmultiview
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrmultiview" to ""
+-- Installing: /tmp/package-openexr/usr/bin/exrmultipart
+-- Set runtime path of "/tmp/package-openexr/usr/bin/exrmultipart" to ""
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/TechnicalIntroduction.pdf
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/ReadingAndWritingImageFiles.pdf
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/OpenEXRFileLayout.pdf
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/MultiViewOpenEXR.pdf
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/InterpretingDeepPixels.pdf
+-- Installing: /tmp/package-openexr/usr/share/doc/OpenEXR/TheoryDeepPixels.pdf
+-- Installing: /tmp/package-openexr/usr/lib/pkgconfig/PyIlmBase.pc
+-- Installing: /tmp/package-openexr/usr/lib/cmake/PyIlmBase/PyIlmBaseConfigVersion.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/PyIlmBase/PyIlmBaseConfig.cmake
+-- Installing: /tmp/package-openexr/usr/lib/cmake/PyIlmBase/PyIlmBaseConfig-release.cmake
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyIex.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyIexExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyIexTypeTranslator.h
+-- Installing: /tmp/package-openexr/usr/lib/libPyIex_Python2_7-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libPyIex_Python2_7-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libPyIex_Python2_7-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libPyIex_Python2_7-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/python2.7/site-packages/iex.so
+-- Set runtime path of "/tmp/package-openexr/usr/lib/python2.7/site-packages/iex.so" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libPyIex_Python3_9-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libPyIex_Python3_9-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libPyIex_Python3_9-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libPyIex_Python3_9-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/python3.9/site-packages/iex.so
+-- Set runtime path of "/tmp/package-openexr/usr/lib/python3.9/site-packages/iex.so" to ""
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImath.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathAutovectorize.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathBasicTypes.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathBox.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathBoxArrayImpl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathColor.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathColor3ArrayImpl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathColor4Array2DImpl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathColor4ArrayImpl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathDecorators.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathEuler.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathExport.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathFixedArray.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathFixedArray2D.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathFixedMatrix.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathFixedVArray.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathFrustum.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathFun.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathLine.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathM44Array.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathMathExc.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathMatrix.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathOperators.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathPlane.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathQuat.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathRandom.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathShear.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathStringArray.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathStringArrayRegister.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathStringTable.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathTask.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathUtil.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVec.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVec2Impl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVec3ArrayImpl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVec3Impl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVec4ArrayImpl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVec4Impl.h
+-- Installing: /tmp/package-openexr/usr/include/OpenEXR/PyImathVecOperators.h
+-- Installing: /tmp/package-openexr/usr/lib/libPyImath_Python2_7-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libPyImath_Python2_7-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libPyImath_Python2_7-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libPyImath_Python2_7-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/python2.7/site-packages/imath.so
+-- Set runtime path of "/tmp/package-openexr/usr/lib/python2.7/site-packages/imath.so" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libPyImath_Python3_9-2_5.so.25.0.3
+-- Installing: /tmp/package-openexr/usr/lib/libPyImath_Python3_9-2_5.so.25
+-- Set runtime path of "/tmp/package-openexr/usr/lib/libPyImath_Python3_9-2_5.so.25.0.3" to ""
+-- Installing: /tmp/package-openexr/usr/lib/libPyImath_Python3_9-2_5.so
+-- Installing: /tmp/package-openexr/usr/lib/python3.9/site-packages/imath.so
+-- Set runtime path of "/tmp/package-openexr/usr/lib/python3.9/site-packages/imath.so" to ""
+
+Slackware package maker, version 3.14159265.
+
+Searching for symbolic links:
+usr/lib/libHalf-2_5.so	libHalf-2_5.so.25
+usr/lib/libHalf-2_5.so.25	libHalf-2_5.so.25.0.3
+usr/lib/libHalf.so	libHalf-2_5.so
+usr/lib/libIex-2_5.so	libIex-2_5.so.25
+usr/lib/libIex-2_5.so.25	libIex-2_5.so.25.0.3
+usr/lib/libIex.so	libIex-2_5.so
+usr/lib/libIexMath-2_5.so	libIexMath-2_5.so.25
+usr/lib/libIexMath-2_5.so.25	libIexMath-2_5.so.25.0.3
+usr/lib/libIexMath.so	libIexMath-2_5.so
+usr/lib/libIlmImf-2_5.so	libIlmImf-2_5.so.25
+usr/lib/libIlmImf-2_5.so.25	libIlmImf-2_5.so.25.0.3
+usr/lib/libIlmImf.so	libIlmImf-2_5.so
+usr/lib/libIlmImfUtil-2_5.so	libIlmImfUtil-2_5.so.25
+usr/lib/libIlmImfUtil-2_5.so.25	libIlmImfUtil-2_5.so.25.0.3
+usr/lib/libIlmImfUtil.so	libIlmImfUtil-2_5.so
+usr/lib/libIlmThread-2_5.so	libIlmThread-2_5.so.25
+usr/lib/libIlmThread-2_5.so.25	libIlmThread-2_5.so.25.0.3
+usr/lib/libIlmThread.so	libIlmThread-2_5.so
+usr/lib/libImath-2_5.so	libImath-2_5.so.25
+usr/lib/libImath-2_5.so.25	libImath-2_5.so.25.0.3
+usr/lib/libImath.so	libImath-2_5.so
+usr/lib/libPyIex_Python2_7-2_5.so	libPyIex_Python2_7-2_5.so.25
+usr/lib/libPyIex_Python2_7-2_5.so.25	libPyIex_Python2_7-2_5.so.25.0.3
+usr/lib/libPyIex_Python3_9-2_5.so	libPyIex_Python3_9-2_5.so.25
+usr/lib/libPyIex_Python3_9-2_5.so.25	libPyIex_Python3_9-2_5.so.25.0.3
+usr/lib/libPyImath_Python2_7-2_5.so	libPyImath_Python2_7-2_5.so.25
+usr/lib/libPyImath_Python2_7-2_5.so.25	libPyImath_Python2_7-2_5.so.25.0.3
+usr/lib/libPyImath_Python3_9-2_5.so	libPyImath_Python3_9-2_5.so.25
+usr/lib/libPyImath_Python3_9-2_5.so.25	libPyImath_Python3_9-2_5.so.25.0.3
+
+Making symbolic link creation script:
+( cd usr/lib ; rm -rf libHalf-2_5.so )
+( cd usr/lib ; ln -sf libHalf-2_5.so.25 libHalf-2_5.so )
+( cd usr/lib ; rm -rf libHalf-2_5.so.25 )
+( cd usr/lib ; ln -sf libHalf-2_5.so.25.0.3 libHalf-2_5.so.25 )
+( cd usr/lib ; rm -rf libHalf.so )
+( cd usr/lib ; ln -sf libHalf-2_5.so libHalf.so )
+( cd usr/lib ; rm -rf libIex-2_5.so )
+( cd usr/lib ; ln -sf libIex-2_5.so.25 libIex-2_5.so )
+( cd usr/lib ; rm -rf libIex-2_5.so.25 )
+( cd usr/lib ; ln -sf libIex-2_5.so.25.0.3 libIex-2_5.so.25 )
+( cd usr/lib ; rm -rf libIex.so )
+( cd usr/lib ; ln -sf libIex-2_5.so libIex.so )
+( cd usr/lib ; rm -rf libIexMath-2_5.so )
+( cd usr/lib ; ln -sf libIexMath-2_5.so.25 libIexMath-2_5.so )
+( cd usr/lib ; rm -rf libIexMath-2_5.so.25 )
+( cd usr/lib ; ln -sf libIexMath-2_5.so.25.0.3 libIexMath-2_5.so.25 )
+( cd usr/lib ; rm -rf libIexMath.so )
+( cd usr/lib ; ln -sf libIexMath-2_5.so libIexMath.so )
+( cd usr/lib ; rm -rf libIlmImf-2_5.so )
+( cd usr/lib ; ln -sf libIlmImf-2_5.so.25 libIlmImf-2_5.so )
+( cd usr/lib ; rm -rf libIlmImf-2_5.so.25 )
+( cd usr/lib ; ln -sf libIlmImf-2_5.so.25.0.3 libIlmImf-2_5.so.25 )
+( cd usr/lib ; rm -rf libIlmImf.so )
+( cd usr/lib ; ln -sf libIlmImf-2_5.so libIlmImf.so )
+( cd usr/lib ; rm -rf libIlmImfUtil-2_5.so )
+( cd usr/lib ; ln -sf libIlmImfUtil-2_5.so.25 libIlmImfUtil-2_5.so )
+( cd usr/lib ; rm -rf libIlmImfUtil-2_5.so.25 )
+( cd usr/lib ; ln -sf libIlmImfUtil-2_5.so.25.0.3 libIlmImfUtil-2_5.so.25 )
+( cd usr/lib ; rm -rf libIlmImfUtil.so )
+( cd usr/lib ; ln -sf libIlmImfUtil-2_5.so libIlmImfUtil.so )
+( cd usr/lib ; rm -rf libIlmThread-2_5.so )
+( cd usr/lib ; ln -sf libIlmThread-2_5.so.25 libIlmThread-2_5.so )
+( cd usr/lib ; rm -rf libIlmThread-2_5.so.25 )
+( cd usr/lib ; ln -sf libIlmThread-2_5.so.25.0.3 libIlmThread-2_5.so.25 )
+( cd usr/lib ; rm -rf libIlmThread.so )
+( cd usr/lib ; ln -sf libIlmThread-2_5.so libIlmThread.so )
+( cd usr/lib ; rm -rf libImath-2_5.so )
+( cd usr/lib ; ln -sf libImath-2_5.so.25 libImath-2_5.so )
+( cd usr/lib ; rm -rf libImath-2_5.so.25 )
+( cd usr/lib ; ln -sf libImath-2_5.so.25.0.3 libImath-2_5.so.25 )
+( cd usr/lib ; rm -rf libImath.so )
+( cd usr/lib ; ln -sf libImath-2_5.so libImath.so )
+( cd usr/lib ; rm -rf libPyIex_Python2_7-2_5.so )
+( cd usr/lib ; ln -sf libPyIex_Python2_7-2_5.so.25 libPyIex_Python2_7-2_5.so )
+( cd usr/lib ; rm -rf libPyIex_Python2_7-2_5.so.25 )
+( cd usr/lib ; ln -sf libPyIex_Python2_7-2_5.so.25.0.3 libPyIex_Python2_7-2_5.so.25 )
+( cd usr/lib ; rm -rf libPyIex_Python3_9-2_5.so )
+( cd usr/lib ; ln -sf libPyIex_Python3_9-2_5.so.25 libPyIex_Python3_9-2_5.so )
+( cd usr/lib ; rm -rf libPyIex_Python3_9-2_5.so.25 )
+( cd usr/lib ; ln -sf libPyIex_Python3_9-2_5.so.25.0.3 libPyIex_Python3_9-2_5.so.25 )
+( cd usr/lib ; rm -rf libPyImath_Python2_7-2_5.so )
+( cd usr/lib ; ln -sf libPyImath_Python2_7-2_5.so.25 libPyImath_Python2_7-2_5.so )
+( cd usr/lib ; rm -rf libPyImath_Python2_7-2_5.so.25 )
+( cd usr/lib ; ln -sf libPyImath_Python2_7-2_5.so.25.0.3 libPyImath_Python2_7-2_5.so.25 )
+( cd usr/lib ; rm -rf libPyImath_Python3_9-2_5.so )
+( cd usr/lib ; ln -sf libPyImath_Python3_9-2_5.so.25 libPyImath_Python3_9-2_5.so )
+( cd usr/lib ; rm -rf libPyImath_Python3_9-2_5.so.25 )
+( cd usr/lib ; ln -sf libPyImath_Python3_9-2_5.so.25.0.3 libPyImath_Python3_9-2_5.so.25 )
+
+It is recommended that you make these lines your new installation script.
+
+Would you like to make this stuff the install script for this package
+and remove the symbolic links ([y]es, [n]o)? y
+
+
+Removing symbolic links:
+removed './usr/lib/libPyIex_Python3_9-2_5.so'
+removed './usr/lib/libIex.so'
+removed './usr/lib/libIlmImf-2_5.so'
+removed './usr/lib/libIex-2_5.so.25'
+removed './usr/lib/libImath-2_5.so.25'
+removed './usr/lib/libHalf-2_5.so'
+removed './usr/lib/libIlmImfUtil-2_5.so'
+removed './usr/lib/libImath.so'
+removed './usr/lib/libIexMath-2_5.so.25'
+removed './usr/lib/libIlmImfUtil.so'
+removed './usr/lib/libIlmImf-2_5.so.25'
+removed './usr/lib/libIexMath.so'
+removed './usr/lib/libImath-2_5.so'
+removed './usr/lib/libHalf.so'
+removed './usr/lib/libPyImath_Python3_9-2_5.so.25'
+removed './usr/lib/libHalf-2_5.so.25'
+removed './usr/lib/libIlmThread.so'
+removed './usr/lib/libPyImath_Python3_9-2_5.so'
+removed './usr/lib/libIlmThread-2_5.so.25'
+removed './usr/lib/libPyIex_Python2_7-2_5.so'
+removed './usr/lib/libPyImath_Python2_7-2_5.so.25'
+removed './usr/lib/libIlmThread-2_5.so'
+removed './usr/lib/libPyIex_Python3_9-2_5.so.25'
+removed './usr/lib/libIexMath-2_5.so'
+removed './usr/lib/libPyImath_Python2_7-2_5.so'
+removed './usr/lib/libIex-2_5.so'
+removed './usr/lib/libIlmImf.so'
+removed './usr/lib/libIlmImfUtil-2_5.so.25'
+removed './usr/lib/libPyIex_Python2_7-2_5.so.25'
+
+Creating your new ./install/doinst.sh...
+
+This next step is optional - you can set the directories in your package
+to some sane permissions. If any of the directories in your package have
+special permissions, then DO NOT reset them here!
+
+Would you like to reset all directory permissions to 755 (drwxr-xr-x) and
+directory ownerships to root.root ([y]es, [n]o)? n
+
+Creating Slackware package:  /tmp/openexr-2.5.4-x86_64-1.txz
+
+./
+install/
+install/doinst.sh
+install/slack-desc
+usr/
+usr/bin/
+usr/bin/exr2aces
+usr/bin/exrenvmap
+usr/bin/exrheader
+usr/bin/exrmakepreview
+usr/bin/exrmaketiled
+usr/bin/exrmultipart
+usr/bin/exrmultiview
+usr/bin/exrstdattr
+usr/doc/
+usr/doc/openexr-2.5.4/
+usr/doc/openexr-2.5.4/CHANGES.md
+usr/doc/openexr-2.5.4/CODE_OF_CONDUCT.md
+usr/doc/openexr-2.5.4/CONTRIBUTING.md
+usr/doc/openexr-2.5.4/CONTRIBUTORS.md
+usr/doc/openexr-2.5.4/GOVERNANCE.md
+usr/doc/openexr-2.5.4/INSTALL.md
+usr/doc/openexr-2.5.4/InterpretingDeepPixels.pdf
+usr/doc/openexr-2.5.4/LICENSE.md
+usr/doc/openexr-2.5.4/MultiViewOpenEXR.pdf
+usr/doc/openexr-2.5.4/OpenEXRFileLayout.pdf
+usr/doc/openexr-2.5.4/README.md
+usr/doc/openexr-2.5.4/ReadingAndWritingImageFiles.pdf
+usr/doc/openexr-2.5.4/SECURITY.md
+usr/doc/openexr-2.5.4/TechnicalIntroduction.pdf
+usr/doc/openexr-2.5.4/TheoryDeepPixels.pdf
+usr/doc/openexr-2.5.4/examples/
+usr/doc/openexr-2.5.4/examples/drawImage.cpp
+usr/doc/openexr-2.5.4/examples/drawImage.h
+usr/doc/openexr-2.5.4/examples/generalInterfaceExamples.cpp
+usr/doc/openexr-2.5.4/examples/generalInterfaceExamples.h
+usr/doc/openexr-2.5.4/examples/generalInterfaceTiledExamples.cpp
+usr/doc/openexr-2.5.4/examples/generalInterfaceTiledExamples.h
+usr/doc/openexr-2.5.4/examples/lowLevelIoExamples.cpp
+usr/doc/openexr-2.5.4/examples/lowLevelIoExamples.h
+usr/doc/openexr-2.5.4/examples/main.cpp
+usr/doc/openexr-2.5.4/examples/namespaceAlias.h
+usr/doc/openexr-2.5.4/examples/previewImageExamples.cpp
+usr/doc/openexr-2.5.4/examples/previewImageExamples.h
+usr/doc/openexr-2.5.4/examples/rgbaInterfaceExamples.cpp
+usr/doc/openexr-2.5.4/examples/rgbaInterfaceExamples.h
+usr/doc/openexr-2.5.4/examples/rgbaInterfaceTiledExamples.cpp
+usr/doc/openexr-2.5.4/examples/rgbaInterfaceTiledExamples.h
+usr/include/
+usr/include/OpenEXR/
+usr/include/OpenEXR/Iex.h
+usr/include/OpenEXR/IexBaseExc.h
+usr/include/OpenEXR/IexErrnoExc.h
+usr/include/OpenEXR/IexExport.h
+usr/include/OpenEXR/IexForward.h
+usr/include/OpenEXR/IexMacros.h
+usr/include/OpenEXR/IexMathExc.h
+usr/include/OpenEXR/IexMathFloatExc.h
+usr/include/OpenEXR/IexMathFpu.h
+usr/include/OpenEXR/IexMathIeeeExc.h
+usr/include/OpenEXR/IexNamespace.h
+usr/include/OpenEXR/IexThrowErrnoExc.h
+usr/include/OpenEXR/IlmBaseConfig.h
+usr/include/OpenEXR/IlmThread.h
+usr/include/OpenEXR/IlmThreadExport.h
+usr/include/OpenEXR/IlmThreadForward.h
+usr/include/OpenEXR/IlmThreadMutex.h
+usr/include/OpenEXR/IlmThreadNamespace.h
+usr/include/OpenEXR/IlmThreadPool.h
+usr/include/OpenEXR/IlmThreadSemaphore.h
+usr/include/OpenEXR/ImathBox.h
+usr/include/OpenEXR/ImathBoxAlgo.h
+usr/include/OpenEXR/ImathColor.h
+usr/include/OpenEXR/ImathColorAlgo.h
+usr/include/OpenEXR/ImathEuler.h
+usr/include/OpenEXR/ImathExc.h
+usr/include/OpenEXR/ImathExport.h
+usr/include/OpenEXR/ImathForward.h
+usr/include/OpenEXR/ImathFrame.h
+usr/include/OpenEXR/ImathFrustum.h
+usr/include/OpenEXR/ImathFrustumTest.h
+usr/include/OpenEXR/ImathFun.h
+usr/include/OpenEXR/ImathGL.h
+usr/include/OpenEXR/ImathGLU.h
+usr/include/OpenEXR/ImathHalfLimits.h
+usr/include/OpenEXR/ImathInt64.h
+usr/include/OpenEXR/ImathInterval.h
+usr/include/OpenEXR/ImathLimits.h
+usr/include/OpenEXR/ImathLine.h
+usr/include/OpenEXR/ImathLineAlgo.h
+usr/include/OpenEXR/ImathMath.h
+usr/include/OpenEXR/ImathMatrix.h
+usr/include/OpenEXR/ImathMatrixAlgo.h
+usr/include/OpenEXR/ImathNamespace.h
+usr/include/OpenEXR/ImathPlane.h
+usr/include/OpenEXR/ImathPlatform.h
+usr/include/OpenEXR/ImathQuat.h
+usr/include/OpenEXR/ImathRandom.h
+usr/include/OpenEXR/ImathRoots.h
+usr/include/OpenEXR/ImathShear.h
+usr/include/OpenEXR/ImathSphere.h
+usr/include/OpenEXR/ImathVec.h
+usr/include/OpenEXR/ImathVecAlgo.h
+usr/include/OpenEXR/ImfAcesFile.h
+usr/include/OpenEXR/ImfArray.h
+usr/include/OpenEXR/ImfAttribute.h
+usr/include/OpenEXR/ImfB44Compressor.h
+usr/include/OpenEXR/ImfBoxAttribute.h
+usr/include/OpenEXR/ImfCRgbaFile.h
+usr/include/OpenEXR/ImfChannelList.h
+usr/include/OpenEXR/ImfChannelListAttribute.h
+usr/include/OpenEXR/ImfChromaticities.h
+usr/include/OpenEXR/ImfChromaticitiesAttribute.h
+usr/include/OpenEXR/ImfCompositeDeepScanLine.h
+usr/include/OpenEXR/ImfCompression.h
+usr/include/OpenEXR/ImfCompressionAttribute.h
+usr/include/OpenEXR/ImfConvert.h
+usr/include/OpenEXR/ImfDeepCompositing.h
+usr/include/OpenEXR/ImfDeepFrameBuffer.h
+usr/include/OpenEXR/ImfDeepImage.h
+usr/include/OpenEXR/ImfDeepImageChannel.h
+usr/include/OpenEXR/ImfDeepImageIO.h
+usr/include/OpenEXR/ImfDeepImageLevel.h
+usr/include/OpenEXR/ImfDeepImageState.h
+usr/include/OpenEXR/ImfDeepImageStateAttribute.h
+usr/include/OpenEXR/ImfDeepScanLineInputFile.h
+usr/include/OpenEXR/ImfDeepScanLineInputPart.h
+usr/include/OpenEXR/ImfDeepScanLineOutputFile.h
+usr/include/OpenEXR/ImfDeepScanLineOutputPart.h
+usr/include/OpenEXR/ImfDeepTiledInputFile.h
+usr/include/OpenEXR/ImfDeepTiledInputPart.h
+usr/include/OpenEXR/ImfDeepTiledOutputFile.h
+usr/include/OpenEXR/ImfDeepTiledOutputPart.h
+usr/include/OpenEXR/ImfDoubleAttribute.h
+usr/include/OpenEXR/ImfEnvmap.h
+usr/include/OpenEXR/ImfEnvmapAttribute.h
+usr/include/OpenEXR/ImfExport.h
+usr/include/OpenEXR/ImfFlatImage.h
+usr/include/OpenEXR/ImfFlatImageChannel.h
+usr/include/OpenEXR/ImfFlatImageIO.h
+usr/include/OpenEXR/ImfFlatImageLevel.h
+usr/include/OpenEXR/ImfFloatAttribute.h
+usr/include/OpenEXR/ImfFloatVectorAttribute.h
+usr/include/OpenEXR/ImfForward.h
+usr/include/OpenEXR/ImfFrameBuffer.h
+usr/include/OpenEXR/ImfFramesPerSecond.h
+usr/include/OpenEXR/ImfGenericInputFile.h
+usr/include/OpenEXR/ImfGenericOutputFile.h
+usr/include/OpenEXR/ImfHeader.h
+usr/include/OpenEXR/ImfHuf.h
+usr/include/OpenEXR/ImfIO.h
+usr/include/OpenEXR/ImfImage.h
+usr/include/OpenEXR/ImfImageChannel.h
+usr/include/OpenEXR/ImfImageChannelRenaming.h
+usr/include/OpenEXR/ImfImageDataWindow.h
+usr/include/OpenEXR/ImfImageIO.h
+usr/include/OpenEXR/ImfImageLevel.h
+usr/include/OpenEXR/ImfInputFile.h
+usr/include/OpenEXR/ImfInputPart.h
+usr/include/OpenEXR/ImfInt64.h
+usr/include/OpenEXR/ImfIntAttribute.h
+usr/include/OpenEXR/ImfKeyCode.h
+usr/include/OpenEXR/ImfKeyCodeAttribute.h
+usr/include/OpenEXR/ImfLineOrder.h
+usr/include/OpenEXR/ImfLineOrderAttribute.h
+usr/include/OpenEXR/ImfLut.h
+usr/include/OpenEXR/ImfMatrixAttribute.h
+usr/include/OpenEXR/ImfMultiPartInputFile.h
+usr/include/OpenEXR/ImfMultiPartOutputFile.h
+usr/include/OpenEXR/ImfMultiView.h
+usr/include/OpenEXR/ImfName.h
+usr/include/OpenEXR/ImfNamespace.h
+usr/include/OpenEXR/ImfOpaqueAttribute.h
+usr/include/OpenEXR/ImfOutputFile.h
+usr/include/OpenEXR/ImfOutputPart.h
+usr/include/OpenEXR/ImfPartHelper.h
+usr/include/OpenEXR/ImfPartType.h
+usr/include/OpenEXR/ImfPixelType.h
+usr/include/OpenEXR/ImfPreviewImage.h
+usr/include/OpenEXR/ImfPreviewImageAttribute.h
+usr/include/OpenEXR/ImfRational.h
+usr/include/OpenEXR/ImfRationalAttribute.h
+usr/include/OpenEXR/ImfRgba.h
+usr/include/OpenEXR/ImfRgbaFile.h
+usr/include/OpenEXR/ImfRgbaYca.h
+usr/include/OpenEXR/ImfSampleCountChannel.h
+usr/include/OpenEXR/ImfStandardAttributes.h
+usr/include/OpenEXR/ImfStdIO.h
+usr/include/OpenEXR/ImfStringAttribute.h
+usr/include/OpenEXR/ImfStringVectorAttribute.h
+usr/include/OpenEXR/ImfTestFile.h
+usr/include/OpenEXR/ImfThreading.h
+usr/include/OpenEXR/ImfTileDescription.h
+usr/include/OpenEXR/ImfTileDescriptionAttribute.h
+usr/include/OpenEXR/ImfTiledInputFile.h
+usr/include/OpenEXR/ImfTiledInputPart.h
+usr/include/OpenEXR/ImfTiledOutputFile.h
+usr/include/OpenEXR/ImfTiledOutputPart.h
+usr/include/OpenEXR/ImfTiledRgbaFile.h
+usr/include/OpenEXR/ImfTimeCode.h
+usr/include/OpenEXR/ImfTimeCodeAttribute.h
+usr/include/OpenEXR/ImfUtilExport.h
+usr/include/OpenEXR/ImfVecAttribute.h
+usr/include/OpenEXR/ImfVersion.h
+usr/include/OpenEXR/ImfWav.h
+usr/include/OpenEXR/ImfXdr.h
+usr/include/OpenEXR/OpenEXRConfig.h
+usr/include/OpenEXR/PyIex.h
+usr/include/OpenEXR/PyIexExport.h
+usr/include/OpenEXR/PyIexTypeTranslator.h
+usr/include/OpenEXR/PyImath.h
+usr/include/OpenEXR/PyImathAutovectorize.h
+usr/include/OpenEXR/PyImathBasicTypes.h
+usr/include/OpenEXR/PyImathBox.h
+usr/include/OpenEXR/PyImathBoxArrayImpl.h
+usr/include/OpenEXR/PyImathColor.h
+usr/include/OpenEXR/PyImathColor3ArrayImpl.h
+usr/include/OpenEXR/PyImathColor4Array2DImpl.h
+usr/include/OpenEXR/PyImathColor4ArrayImpl.h
+usr/include/OpenEXR/PyImathDecorators.h
+usr/include/OpenEXR/PyImathEuler.h
+usr/include/OpenEXR/PyImathExport.h
+usr/include/OpenEXR/PyImathFixedArray.h
+usr/include/OpenEXR/PyImathFixedArray2D.h
+usr/include/OpenEXR/PyImathFixedMatrix.h
+usr/include/OpenEXR/PyImathFixedVArray.h
+usr/include/OpenEXR/PyImathFrustum.h
+usr/include/OpenEXR/PyImathFun.h
+usr/include/OpenEXR/PyImathLine.h
+usr/include/OpenEXR/PyImathM44Array.h
+usr/include/OpenEXR/PyImathMathExc.h
+usr/include/OpenEXR/PyImathMatrix.h
+usr/include/OpenEXR/PyImathOperators.h
+usr/include/OpenEXR/PyImathPlane.h
+usr/include/OpenEXR/PyImathQuat.h
+usr/include/OpenEXR/PyImathRandom.h
+usr/include/OpenEXR/PyImathShear.h
+usr/include/OpenEXR/PyImathStringArray.h
+usr/include/OpenEXR/PyImathStringArrayRegister.h
+usr/include/OpenEXR/PyImathStringTable.h
+usr/include/OpenEXR/PyImathTask.h
+usr/include/OpenEXR/PyImathUtil.h
+usr/include/OpenEXR/PyImathVec.h
+usr/include/OpenEXR/PyImathVec2Impl.h
+usr/include/OpenEXR/PyImathVec3ArrayImpl.h
+usr/include/OpenEXR/PyImathVec3Impl.h
+usr/include/OpenEXR/PyImathVec4ArrayImpl.h
+usr/include/OpenEXR/PyImathVec4Impl.h
+usr/include/OpenEXR/PyImathVecOperators.h
+usr/include/OpenEXR/half.h
+usr/include/OpenEXR/halfExport.h
+usr/include/OpenEXR/halfFunction.h
+usr/include/OpenEXR/halfLimits.h
+usr/lib/
+usr/lib/cmake/
+usr/lib/cmake/IlmBase/
+usr/lib/cmake/IlmBase/IlmBaseConfig.cmake
+usr/lib/cmake/IlmBase/IlmBaseConfigVersion.cmake
+usr/lib/cmake/IlmBase/IlmBaseTargets-release.cmake
+usr/lib/cmake/IlmBase/IlmBaseTargets.cmake
+usr/lib/cmake/OpenEXR/
+usr/lib/cmake/OpenEXR/OpenEXRConfig.cmake
+usr/lib/cmake/OpenEXR/OpenEXRConfigVersion.cmake
+usr/lib/cmake/OpenEXR/OpenEXRTargets-release.cmake
+usr/lib/cmake/OpenEXR/OpenEXRTargets.cmake
+usr/lib/cmake/PyIlmBase/
+usr/lib/cmake/PyIlmBase/PyIlmBaseConfig-release.cmake
+usr/lib/cmake/PyIlmBase/PyIlmBaseConfig.cmake
+usr/lib/cmake/PyIlmBase/PyIlmBaseConfigVersion.cmake
+usr/lib/libHalf-2_5.so.25.0.3
+usr/lib/libIex-2_5.so.25.0.3
+usr/lib/libIexMath-2_5.so.25.0.3
+usr/lib/libIlmImf-2_5.so.25.0.3
+usr/lib/libIlmImfUtil-2_5.so.25.0.3
+usr/lib/libIlmThread-2_5.so.25.0.3
+usr/lib/libImath-2_5.so.25.0.3
+usr/lib/libPyIex_Python2_7-2_5.so.25.0.3
+usr/lib/libPyIex_Python3_9-2_5.so.25.0.3
+usr/lib/libPyImath_Python2_7-2_5.so.25.0.3
+usr/lib/libPyImath_Python3_9-2_5.so.25.0.3
+usr/lib/pkgconfig/
+usr/lib/pkgconfig/IlmBase.pc
+usr/lib/pkgconfig/OpenEXR.pc
+usr/lib/pkgconfig/PyIlmBase.pc
+usr/lib/python2.7/
+usr/lib/python2.7/site-packages/
+usr/lib/python2.7/site-packages/iex.so
+usr/lib/python2.7/site-packages/imath.so
+usr/lib/python3.9/
+usr/lib/python3.9/site-packages/
+usr/lib/python3.9/site-packages/iex.so
+usr/lib/python3.9/site-packages/imath.so
+
+Slackware package /tmp/openexr-2.5.4-x86_64-1.txz created.
+
