diff -aurN oprofile-1.3.0/libutil++/bfd_support.cpp oprofile-1.3.0-new/libutil++/bfd_support.cpp
--- oprofile-1.3.0/libutil++/bfd_support.cpp	2015-07-07 14:04:37.000000000 -0000
+++ oprofile-1.3.0-new/libutil++/bfd_support.cpp	2020-02-07 07:36:15.460161045 -0000
@@ -137,7 +137,7 @@
 		}
 	}
 
-	bfd_size_type buildid_sect_size = bfd_section_size(ibfd, sect);
+	bfd_size_type buildid_sect_size = bfd_section_size(sect);
 	char * contents = (char *) xmalloc(buildid_sect_size);
 	errno = 0;
 	if (!bfd_get_section_contents(ibfd, sect,
@@ -188,7 +188,7 @@
 	if (sect == NULL)
 		return false;
 	
-	bfd_size_type debuglink_size = bfd_section_size(ibfd, sect);  
+	bfd_size_type debuglink_size = bfd_section_size(sect);  
 	char * contents = (char *) xmalloc(debuglink_size);
 	cverb << vbfd
 	      << ".gnu_debuglink section has size " << debuglink_size << endl;
@@ -346,7 +346,7 @@
 	// first restrict the search on a sensible range of vma, 16 is
 	// an intuitive value based on epilog code look
 	size_t max_search = 16;
-	size_t section_size = bfd_section_size(abfd, section);
+	size_t section_size = bfd_section_size(section);
 	if (pc + max_search > section_size)
 		max_search = section_size - pc;
 
@@ -819,10 +819,10 @@
 	else
 		pc = (sym.value() + offset) - sym.filepos();
 
-	if ((bfd_get_section_flags(abfd, section) & SEC_ALLOC) == 0)
+	if ((bfd_section_flags(section) & SEC_ALLOC) == 0)
 		goto fail;
 
-	if (pc >= bfd_section_size(abfd, section))
+	if (pc >= bfd_section_size(section))
 		goto fail;
 
 	ret = bfd_find_nearest_line(abfd, section, syms, pc, &cfilename,
diff -aurN oprofile-1.3.0/opjitconv/create_bfd.c oprofile-1.3.0-new/opjitconv/create_bfd.c
--- oprofile-1.3.0/opjitconv/create_bfd.c	2015-06-05 20:39:34.000000000 -0000
+++ oprofile-1.3.0-new/opjitconv/create_bfd.c	2020-02-07 07:34:55.595652489 -0000
@@ -86,12 +86,12 @@
 		bfd_perror("bfd_make_section");
 		goto error;
 	}
-	bfd_set_section_vma(abfd, section, vma);
-	if (bfd_set_section_size(abfd, section, size) == FALSE) {
+	bfd_set_section_vma(section, vma);
+	if (bfd_set_section_size(section, size) == FALSE) {
 		bfd_perror("bfd_set_section_size");
 		goto error;
 	}
-	if (bfd_set_section_flags(abfd, section, flags) == FALSE) {
+	if (bfd_set_section_flags(section, flags) == FALSE) {
 		bfd_perror("bfd_set_section_flags");
 		goto error;
 	}
